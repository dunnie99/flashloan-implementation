{
	"id": "03f8852106dc51363efeea7ffa5b97d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"flashloan-implementation/FlashLoan.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.6.6;\nimport \"./FlashLoanReceiverBase.sol\";\nimport \"./ILendingPoolAddressesProvider.sol\";\nimport \"./ILendingPool.sol\";\nimport \"./exchange/Exchange.sol\";\nimport \"./exchange/IERC20.sol\";\n\ncontract FlashloanV1 is FlashLoanReceiverBaseV1, Exchange {\n    address _reserve = address(this);\n    /**  \n        _addressProvider = address of one of the Lending Pool Providers of Aave\n\n        using DAI LendingPool address 0x506B0B2CF20FAA8f38a4E2B524EE43e1f4458Cc5 \n\n        A list of all deployed contract addresses can be found athttps://docs.aave.com/developers/v/1.0/deployed-contracts/deployed-contract-instances\n\n    */\n\n    constructor(address _addressProvider) FlashLoanReceiverBaseV1(_addressProvider) public{}\n\n    /**\n        _asset = address of the asset we want to flash loan\n        Flash loan 1000000000000000000 wei (1 ether) worth of `_asset`\n     */\n    function flashloan(address _asset) public onlyOwner {\n        bytes memory data = \"\";\n        uint amount = 1 ether;\n\n        ILendingPoolV1 lendingPool = ILendingPoolV1(addressesProvider.getLendingPool());\n        lendingPool.flashLoan(address(this), _asset, amount, data);\n    }\n\n    /**\n  This function is called after your contract has received the flash loaned amount\n     */\n    function executeOperation(\n        address _reserve,\n        uint256 _amount,\n        uint256 _fee,\n        bytes calldata _params\n    )\n        external\n        override\n    {\n        require(_amount <= getBalanceInternal(address(this), _reserve), \"Invalid balance, was the flashLoan successful?\");\n       //\n        // Your logic goes here.\n        // !! Ensure that *this contract* has enough of `_reserve` funds to payback the `_fee` !!\n        //\n\n        address token1 = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD;\n        address token2 = 0x13512979ADE267AB5100878E2e0f485B568328a4;\n        address ownerOfToken1 = 0x2853eB1d81342453c6fA7FF7D03C97a8F142EabA;\n        // address ownerOfToken1 = address(this);\n        address ownerOfToken2 = 0x3ceEE3CF67314501Ec960AC81E7e5A58b99Dbb7a;\n        uint amountOfToken1 = 1 ether;\n        uint amountOfToken2 = 1 ether;\n\n        swap(\n            token1,\n            token2,\n            ownerOfToken1,\n            ownerOfToken2,\n            amountOfToken1,\n            amountOfToken2\n        );\n\n        swap(\n            token2,\n            token1,\n            ownerOfToken2,\n            ownerOfToken1,\n            amountOfToken2,\n            amountOfToken1\n        );\n\n        uint totalDebt = _amount.add(_fee);\n        transferFundsBackToPoolInternal(_reserve, totalDebt);\n    }\n\n}"
			},
			"flashloan-implementation/exchange/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ninterface IBasicERC20Token {\n\n    function name() external view returns(string memory);\n    function symbol() external view returns(string memory);\n    function decimals() external view returns(uint8);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"flashloan-implementation/exchange/Exchange.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./IERC20.sol\";\n\ncontract Exchange {\n\n    modifier onlyApproved\n    (\n        address token1,\n        address token2,\n        address ownerOfToken1,\n        address ownerOfToken2,\n        uint amountOfToken1,\n        uint amountOfToken2\n    )\n    {\n        require\n        (\n            IBasicERC20Token(token1).allowance(ownerOfToken1, address(this)) >= amountOfToken1,\n            \"This contract is not approved to spend this amount from token 1\"\n        );\n        require\n        (\n            IBasicERC20Token(token2).allowance(ownerOfToken2, address(this)) >= amountOfToken2,\n            \"This contract is not approved to spend this amount from token 2\"\n        );\n        _;\n    }\n\n    function _safeTransferFrom\n    (\n        address tokenAddress,\n        address sender,\n        address recipient,\n        uint amount\n    ) private {\n        bool sent = IBasicERC20Token(tokenAddress).transferFrom(sender, recipient, amount);\n        require(sent, \"Token transfer failed\");\n    }\n\n    function swap\n    (\n        address token1,\n        address token2,\n        address ownerOfToken1,\n        address ownerOfToken2,\n        uint amountOfToken1,\n        uint amountOfToken2\n    )\n    public\n    onlyApproved\n    (\n        token1,\n        token2,\n        ownerOfToken1,\n        ownerOfToken2,\n        amountOfToken1,\n        amountOfToken2\n    )\n    {\n        _safeTransferFrom(token1, ownerOfToken1, ownerOfToken2, amountOfToken1);\n        _safeTransferFrom(token2, ownerOfToken2, ownerOfToken1, amountOfToken2);\n    }\n}"
			},
			"flashloan-implementation/ILendingPool.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.6.6;\n\ninterface ILendingPoolV1 {\n  function addressesProvider () external view returns ( address );\n  function deposit ( address _reserve, uint256 _amount, uint16 _referralCode ) external payable;\n  function redeemUnderlying ( address _reserve, address _user, uint256 _amount ) external;\n  function borrow ( address _reserve, uint256 _amount, uint256 _interestRateMode, uint16 _referralCode ) external;\n  function repay ( address _reserve, uint256 _amount, address _onBehalfOf ) external payable;\n  function swapBorrowRateMode ( address _reserve ) external;\n  function rebalanceFixedBorrowRate ( address _reserve, address _user ) external;\n  function setUserUseReserveAsCollateral ( address _reserve, bool _useAsCollateral ) external;\n  function liquidationCall ( address _collateral, address _reserve, address _user, uint256 _purchaseAmount, bool _receiveAToken ) external payable;\n  function flashLoan ( address _receiver, address _reserve, uint256 _amount, bytes calldata _params ) external;\n  function getReserveConfigurationData ( address _reserve ) external view returns ( uint256 ltv, uint256 liquidationThreshold, uint256 liquidationDiscount, address interestRateStrategyAddress, bool usageAsCollateralEnabled, bool borrowingEnabled, bool fixedBorrowRateEnabled, bool isActive );\n  function getReserveData ( address _reserve ) external view returns ( uint256 totalLiquidity, uint256 availableLiquidity, uint256 totalBorrowsFixed, uint256 totalBorrowsVariable, uint256 liquidityRate, uint256 variableBorrowRate, uint256 fixedBorrowRate, uint256 averageFixedBorrowRate, uint256 utilizationRate, uint256 liquidityIndex, uint256 variableBorrowIndex, address aTokenAddress, uint40 lastUpdateTimestamp );\n  function getUserAccountData ( address _user ) external view returns ( uint256 totalLiquidityETH, uint256 totalCollateralETH, uint256 totalBorrowsETH, uint256 availableBorrowsETH, uint256 currentLiquidationThreshold, uint256 ltv, uint256 healthFactor );\n  function getUserReserveData ( address _reserve, address _user ) external view returns ( uint256 currentATokenBalance, uint256 currentUnderlyingBalance, uint256 currentBorrowBalance, uint256 principalBorrowBalance, uint256 borrowRateMode, uint256 borrowRate, uint256 liquidityRate, uint256 originationFee, uint256 variableBorrowIndex, uint256 lastUpdateTimestamp, bool usageAsCollateralEnabled );\n  function getReserves () external view;\n}"
			},
			"flashloan-implementation/ILendingPoolAddressesProvider.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.6.6;\n\n/**\n    @title ILendingPoolAddressesProvider interface\n    @notice provides the interface to fetch the LendingPoolCore address\n */\n\ninterface ILendingPoolAddressesProviderV1 {\n    function getLendingPoolCore() external view returns (address payable);\n    function getLendingPool() external view returns (address);\n}"
			},
			"flashloan-implementation/FlashLoanReceiverBase.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.6.6;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\";\nimport \"./IFlashLoanReceiver.sol\";\nimport \"./ILendingPoolAddressesProvider.sol\";\nimport \"./Withdrawable.sol\";\n\nabstract contract FlashLoanReceiverBaseV1 is IFlashLoanReceiverV1, Withdrawable {\n\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    address constant ethAddress = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n    ILendingPoolAddressesProviderV1 public addressesProvider;\n\n    constructor(address _addressProvider) public {\n        addressesProvider = ILendingPoolAddressesProviderV1(_addressProvider);\n    }\n\n    receive() payable external {}\n\n    function transferFundsBackToPoolInternal(address _reserve, uint256 _amount) internal {\n        address payable core = addressesProvider.getLendingPoolCore();\n        transferInternal(core, _reserve, _amount);\n    }\n\n    function transferInternal(address payable _destination, address _reserve, uint256 _amount) internal {\n        if(_reserve == ethAddress) {\n            (bool success, ) = _destination.call{value: _amount}(\"\");\n            require(success == true, \"Couldn't transfer ETH\");\n            return;\n        }\n        IERC20(_reserve).safeTransfer(_destination, _amount);\n    }\n\n    function getBalanceInternal(address _target, address _reserve) internal view returns(uint256) {\n        if(_reserve == ethAddress) {\n            return _target.balance;\n        }\n        return IERC20(_reserve).balanceOf(_target);\n    }\n}"
			},
			"flashloan-implementation/Withdrawable.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.6.6;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\";\n\n/**\n    Ensures that any contract that inherits from this contract is able to\n    withdraw funds that are accidentally received or stuck.\n */\n \ncontract Withdrawable is Ownable {\n    using SafeERC20 for ERC20;\n    address constant ETHER = address(0);\n\n    event LogWithdraw(\n        address indexed _from,\n        address indexed _assetAddress,\n        uint amount\n    );\n\n    /**\n     * @dev Withdraw asset.\n     * @param _assetAddress Asset to be withdrawn.\n     */\n    function withdraw(address _assetAddress) public onlyOwner {\n        uint assetBalance;\n        if (_assetAddress == ETHER) {\n            address self = address(this); // workaround for a possible solidity bug\n            assetBalance = self.balance;\n            msg.sender.transfer(assetBalance);\n        } else {\n            assetBalance = ERC20(_assetAddress).balanceOf(address(this));\n            ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance);\n        }\n        emit LogWithdraw(msg.sender, _assetAddress, assetBalance);\n    }\n}"
			},
			"flashloan-implementation/IFlashLoanReceiver.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.6.6;\n\n/**\n* @title IFlashLoanReceiver interface\n* @notice Interface for the Aave fee IFlashLoanReceiver.\n* @author Aave\n* @dev implement this interface to develop a flashloan-compatible flashLoanReceiver contract\n**/\ninterface IFlashLoanReceiverV1 {\n    function executeOperation(address _reserve, uint256 _amount, uint256 _fee, bytes calldata _params) external;\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"flashloan-implementation/FlashLoan.sol": {
				"FlashloanV1": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressProvider",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LogWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "addressesProvider",
							"outputs": [
								{
									"internalType": "contract ILendingPoolAddressesProviderV1",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_asset",
									"type": "address"
								}
							],
							"name": "flashloan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token2",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ownerOfToken1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ownerOfToken2",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOfToken1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOfToken2",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw asset.",
								"params": {
									"_assetAddress": "Asset to be withdrawn."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"flashloan-implementation/FlashLoan.sol\":234:2632  contract FlashloanV1 is FlashLoanReceiverBaseV1, Exchange {... */\n  mstore(0x40, 0x80)\n    /* \"flashloan-implementation/FlashLoan.sol\":325:329  this */\n  address\n    /* \"flashloan-implementation/FlashLoan.sol\":298:330  address _reserve = address(this) */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"flashloan-implementation/FlashLoan.sol\":670:758  constructor(address _addressProvider) FlashLoanReceiverBaseV1(_addressProvider) public{} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"flashloan-implementation/FlashLoan.sol\":732:748  _addressProvider */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":884:901  address msgSender */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":904:914  _msgSender */\n  shl(0x20, tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":884:916  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":935:944  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":926:932  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":992:1001  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":988:989  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":850:1009  constructor () internal {... */\n  pop\n    /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":903:919  _addressProvider */\n  dup1\n    /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":851:868  addressesProvider */\n  0x01\n  0x00\n    /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":851:920  addressesProvider = ILendingPoolAddressesProviderV1(_addressProvider) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":796:927  constructor(address _addressProvider) public {... */\n  pop\n    /* \"flashloan-implementation/FlashLoan.sol\":670:758  constructor(address _addressProvider) FlashLoanReceiverBaseV1(_addressProvider) public{} */\n  pop\n    /* \"flashloan-implementation/FlashLoan.sol\":234:2632  contract FlashloanV1 is FlashLoanReceiverBaseV1, Exchange {... */\n  jump(tag_11)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_8:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":651:666  address payable */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"flashloan-implementation/FlashLoan.sol\":234:2632  contract FlashloanV1 is FlashLoanReceiverBaseV1, Exchange {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"flashloan-implementation/FlashLoan.sol\":234:2632  contract FlashloanV1 is FlashLoanReceiverBaseV1, Exchange {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa64e3dd7\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xa64e3dd7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc72c4d10\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xee872558\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x36c40477\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"flashloan-implementation/FlashLoan.sol\":911:1191  function flashloan(address _asset) public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"flashloan-implementation/Withdrawable.sol\":865:1408  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1067:1598  function swap... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":733:789  ILendingPoolAddressesProviderV1 public addressesProvider */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"flashloan-implementation/FlashLoan.sol\":1296:2629  function executeOperation(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_36:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"flashloan-implementation/FlashLoan.sol\":911:1191  function flashloan(address _asset) public onlyOwner {... */\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_48\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_49\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_27\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"flashloan-implementation/FlashLoan.sol\":973:990  bytes memory data */\n      0x60\n        /* \"flashloan-implementation/FlashLoan.sol\":973:995  bytes memory data = \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":1005:1016  uint amount */\n      0x00\n        /* \"flashloan-implementation/FlashLoan.sol\":1019:1026  1 ether */\n      0x0de0b6b3a7640000\n        /* \"flashloan-implementation/FlashLoan.sol\":1005:1026  uint amount = 1 ether */\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":1037:1063  ILendingPoolV1 lendingPool */\n      0x00\n        /* \"flashloan-implementation/FlashLoan.sol\":1081:1098  addressesProvider */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan-implementation/FlashLoan.sol\":1081:1113  addressesProvider.getLendingPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0261bf8b\n        /* \"flashloan-implementation/FlashLoan.sol\":1081:1115  addressesProvider.getLendingPool() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":1037:1116  ILendingPoolV1 lendingPool = ILendingPoolV1(addressesProvider.getLendingPool()) */\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":1126:1137  lendingPool */\n      dup1\n        /* \"flashloan-implementation/FlashLoan.sol\":1126:1147  lendingPool.flashLoan */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5cffe9de\n        /* \"flashloan-implementation/FlashLoan.sol\":1156:1160  this */\n      address\n        /* \"flashloan-implementation/FlashLoan.sol\":1163:1169  _asset */\n      dup7\n        /* \"flashloan-implementation/FlashLoan.sol\":1171:1177  amount */\n      dup6\n        /* \"flashloan-implementation/FlashLoan.sol\":1179:1183  data */\n      dup8\n        /* \"flashloan-implementation/FlashLoan.sol\":1126:1184  lendingPool.flashLoan(address(this), _asset, amount, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_56:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_56)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_59\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_59:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1367:1368  _ */\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":911:1191  function flashloan(address _asset) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"flashloan-implementation/Withdrawable.sol\":865:1408  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_21:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_48\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_27\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"flashloan-implementation/Withdrawable.sol\":933:950  uint assetBalance */\n      0x00\n        /* \"flashloan-implementation/Withdrawable.sol\":640:641  0 */\n      dup1\n        /* \"flashloan-implementation/Withdrawable.sol\":964:986  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan-implementation/Withdrawable.sol\":964:977  _assetAddress */\n      dup3\n        /* \"flashloan-implementation/Withdrawable.sol\":964:986  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"flashloan-implementation/Withdrawable.sol\":960:1335  if (_assetAddress == ETHER) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"flashloan-implementation/Withdrawable.sol\":1002:1014  address self */\n      0x00\n        /* \"flashloan-implementation/Withdrawable.sol\":1025:1029  this */\n      address\n        /* \"flashloan-implementation/Withdrawable.sol\":1002:1030  address self = address(this) */\n      swap1\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":1101:1105  self */\n      dup1\n        /* \"flashloan-implementation/Withdrawable.sol\":1101:1113  self.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"flashloan-implementation/Withdrawable.sol\":1086:1113  assetBalance = self.balance */\n      swap2\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":1127:1137  msg.sender */\n      caller\n        /* \"flashloan-implementation/Withdrawable.sol\":1127:1146  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan-implementation/Withdrawable.sol\":1127:1160  msg.sender.transfer(assetBalance) */\n      0x08fc\n        /* \"flashloan-implementation/Withdrawable.sol\":1147:1159  assetBalance */\n      dup4\n        /* \"flashloan-implementation/Withdrawable.sol\":1127:1160  msg.sender.transfer(assetBalance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":960:1335  if (_assetAddress == ETHER) {... */\n      pop\n      jump(tag_71)\n    tag_68:\n        /* \"flashloan-implementation/Withdrawable.sol\":1212:1225  _assetAddress */\n      dup2\n        /* \"flashloan-implementation/Withdrawable.sol\":1206:1236  ERC20(_assetAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"flashloan-implementation/Withdrawable.sol\":1245:1249  this */\n      address\n        /* \"flashloan-implementation/Withdrawable.sol\":1206:1251  ERC20(_assetAddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":1191:1251  assetBalance = ERC20(_assetAddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":1265:1324  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      tag_76\n        /* \"flashloan-implementation/Withdrawable.sol\":1299:1309  msg.sender */\n      caller\n        /* \"flashloan-implementation/Withdrawable.sol\":1311:1323  assetBalance */\n      dup3\n        /* \"flashloan-implementation/Withdrawable.sol\":1271:1284  _assetAddress */\n      dup5\n        /* \"flashloan-implementation/Withdrawable.sol\":1265:1298  ERC20(_assetAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_77\n      swap1\n        /* \"flashloan-implementation/Withdrawable.sol\":1265:1324  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"flashloan-implementation/Withdrawable.sol\":960:1335  if (_assetAddress == ETHER) {... */\n    tag_71:\n        /* \"flashloan-implementation/Withdrawable.sol\":1373:1386  _assetAddress */\n      dup2\n        /* \"flashloan-implementation/Withdrawable.sol\":1349:1401  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan-implementation/Withdrawable.sol\":1361:1371  msg.sender */\n      caller\n        /* \"flashloan-implementation/Withdrawable.sol\":1349:1401  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099\n        /* \"flashloan-implementation/Withdrawable.sol\":1388:1400  assetBalance */\n      dup4\n        /* \"flashloan-implementation/Withdrawable.sol\":1349:1401  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1367:1368  _ */\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":865:1408  function withdraw(address _assetAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_48\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_27\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1823:1824  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1807:1813  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1853:1854  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1836:1842  _owner */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1836:1855  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1131:1138  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1157:1163  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1150:1163  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1067:1598  function swap... */\n    tag_31:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1302:1308  token1 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1318:1324  token2 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1334:1347  ownerOfToken1 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1357:1370  ownerOfToken2 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1380:1394  amountOfToken1 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1404:1418  amountOfToken2 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":428:442  amountOfToken1 */\n      dup2\n        /* \"flashloan-implementation/exchange/Exchange.sol\":377:383  token1 */\n      dup7\n        /* \"flashloan-implementation/exchange/Exchange.sol\":360:394  IBasicERC20Token(token1).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"flashloan-implementation/exchange/Exchange.sol\":395:408  ownerOfToken1 */\n      dup7\n        /* \"flashloan-implementation/exchange/Exchange.sol\":418:422  this */\n      address\n        /* \"flashloan-implementation/exchange/Exchange.sol\":360:424  IBasicERC20Token(token1).allowance(ownerOfToken1, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/exchange/Exchange.sol\":360:442  IBasicERC20Token(token1).allowance(ownerOfToken1, address(this)) >= amountOfToken1 */\n      lt\n      iszero\n        /* \"flashloan-implementation/exchange/Exchange.sol\":330:531  require... */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_eb963c2896a2206169f545030cec46d24f6bea9389c472acb8e0f48da8322999\n      0x3f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":639:653  amountOfToken2 */\n      dup1\n        /* \"flashloan-implementation/exchange/Exchange.sol\":588:594  token2 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":571:605  IBasicERC20Token(token2).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"flashloan-implementation/exchange/Exchange.sol\":606:619  ownerOfToken2 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":629:633  this */\n      address\n        /* \"flashloan-implementation/exchange/Exchange.sol\":571:635  IBasicERC20Token(token2).allowance(ownerOfToken2, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/exchange/Exchange.sol\":571:653  IBasicERC20Token(token2).allowance(ownerOfToken2, address(this)) >= amountOfToken2 */\n      lt\n      iszero\n        /* \"flashloan-implementation/exchange/Exchange.sol\":541:742  require... */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_03555d648df7e6b723014309a5935ca50a462f434066140d1d586da12a6bd4bc\n      0x3f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1439:1510  _safeTransferFrom(token1, ownerOfToken1, ownerOfToken2, amountOfToken1) */\n      tag_96\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1457:1463  token1 */\n      dup13\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1465:1478  ownerOfToken1 */\n      dup12\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1480:1493  ownerOfToken2 */\n      dup12\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1495:1509  amountOfToken1 */\n      dup12\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1439:1456  _safeTransferFrom */\n      tag_97\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1439:1510  _safeTransferFrom(token1, ownerOfToken1, ownerOfToken2, amountOfToken1) */\n      jump\t// in\n    tag_96:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1520:1591  _safeTransferFrom(token2, ownerOfToken2, ownerOfToken1, amountOfToken2) */\n      tag_98\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1538:1544  token2 */\n      dup12\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1546:1559  ownerOfToken2 */\n      dup11\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1561:1574  ownerOfToken1 */\n      dup13\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1576:1590  amountOfToken2 */\n      dup11\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1520:1537  _safeTransferFrom */\n      tag_97\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1520:1591  _safeTransferFrom(token2, ownerOfToken2, ownerOfToken1, amountOfToken2) */\n      jump\t// in\n    tag_98:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1067:1598  function swap... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":733:789  ILendingPoolAddressesProviderV1 public addressesProvider */\n    tag_34:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"flashloan-implementation/FlashLoan.sol\":1296:2629  function executeOperation(... */\n    tag_41:\n        /* \"flashloan-implementation/FlashLoan.sol\":1500:1543  getBalanceInternal(address(this), _reserve) */\n      tag_100\n        /* \"flashloan-implementation/FlashLoan.sol\":1527:1531  this */\n      address\n        /* \"flashloan-implementation/FlashLoan.sol\":1534:1542  _reserve */\n      dup7\n        /* \"flashloan-implementation/FlashLoan.sol\":1500:1518  getBalanceInternal */\n      tag_101\n        /* \"flashloan-implementation/FlashLoan.sol\":1500:1543  getBalanceInternal(address(this), _reserve) */\n      jump\t// in\n    tag_100:\n        /* \"flashloan-implementation/FlashLoan.sol\":1489:1496  _amount */\n      dup5\n        /* \"flashloan-implementation/FlashLoan.sol\":1489:1543  _amount <= getBalanceInternal(address(this), _reserve) */\n      gt\n      iszero\n        /* \"flashloan-implementation/FlashLoan.sol\":1481:1594  require(_amount <= getBalanceInternal(address(this), _reserve), \"Invalid balance, was the flashLoan successful?\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8fe07d1a7bc8ed40574aa57beae4fbd43367cc89459755c316997d76d102b27d\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"flashloan-implementation/FlashLoan.sol\":1757:1771  address token1 */\n      0x00\n        /* \"flashloan-implementation/FlashLoan.sol\":1774:1816  0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n      0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\n        /* \"flashloan-implementation/FlashLoan.sol\":1757:1816  address token1 = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":1826:1840  address token2 */\n      0x00\n        /* \"flashloan-implementation/FlashLoan.sol\":1843:1885  0x13512979ADE267AB5100878E2e0f485B568328a4 */\n      0x13512979ade267ab5100878e2e0f485b568328a4\n        /* \"flashloan-implementation/FlashLoan.sol\":1826:1885  address token2 = 0x13512979ADE267AB5100878E2e0f485B568328a4 */\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":1895:1916  address ownerOfToken1 */\n      0x00\n        /* \"flashloan-implementation/FlashLoan.sol\":1919:1961  0x2853eB1d81342453c6fA7FF7D03C97a8F142EabA */\n      0x2853eb1d81342453c6fa7ff7d03c97a8f142eaba\n        /* \"flashloan-implementation/FlashLoan.sol\":1895:1961  address ownerOfToken1 = 0x2853eB1d81342453c6fA7FF7D03C97a8F142EabA */\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":2021:2042  address ownerOfToken2 */\n      0x00\n        /* \"flashloan-implementation/FlashLoan.sol\":2045:2087  0x3ceEE3CF67314501Ec960AC81E7e5A58b99Dbb7a */\n      0x3ceee3cf67314501ec960ac81e7e5a58b99dbb7a\n        /* \"flashloan-implementation/FlashLoan.sol\":2021:2087  address ownerOfToken2 = 0x3ceEE3CF67314501Ec960AC81E7e5A58b99Dbb7a */\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":2097:2116  uint amountOfToken1 */\n      0x00\n        /* \"flashloan-implementation/FlashLoan.sol\":2119:2126  1 ether */\n      0x0de0b6b3a7640000\n        /* \"flashloan-implementation/FlashLoan.sol\":2097:2126  uint amountOfToken1 = 1 ether */\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":2136:2155  uint amountOfToken2 */\n      0x00\n        /* \"flashloan-implementation/FlashLoan.sol\":2158:2165  1 ether */\n      0x0de0b6b3a7640000\n        /* \"flashloan-implementation/FlashLoan.sol\":2136:2165  uint amountOfToken2 = 1 ether */\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":2176:2340  swap(... */\n      tag_103\n        /* \"flashloan-implementation/FlashLoan.sol\":2194:2200  token1 */\n      dup7\n        /* \"flashloan-implementation/FlashLoan.sol\":2214:2220  token2 */\n      dup7\n        /* \"flashloan-implementation/FlashLoan.sol\":2234:2247  ownerOfToken1 */\n      dup7\n        /* \"flashloan-implementation/FlashLoan.sol\":2261:2274  ownerOfToken2 */\n      dup7\n        /* \"flashloan-implementation/FlashLoan.sol\":2288:2302  amountOfToken1 */\n      dup7\n        /* \"flashloan-implementation/FlashLoan.sol\":2316:2330  amountOfToken2 */\n      dup7\n        /* \"flashloan-implementation/FlashLoan.sol\":2176:2180  swap */\n      tag_31\n        /* \"flashloan-implementation/FlashLoan.sol\":2176:2340  swap(... */\n      jump\t// in\n    tag_103:\n        /* \"flashloan-implementation/FlashLoan.sol\":2351:2515  swap(... */\n      tag_104\n        /* \"flashloan-implementation/FlashLoan.sol\":2369:2375  token2 */\n      dup6\n        /* \"flashloan-implementation/FlashLoan.sol\":2389:2395  token1 */\n      dup8\n        /* \"flashloan-implementation/FlashLoan.sol\":2409:2422  ownerOfToken2 */\n      dup6\n        /* \"flashloan-implementation/FlashLoan.sol\":2436:2449  ownerOfToken1 */\n      dup8\n        /* \"flashloan-implementation/FlashLoan.sol\":2463:2477  amountOfToken2 */\n      dup6\n        /* \"flashloan-implementation/FlashLoan.sol\":2491:2505  amountOfToken1 */\n      dup8\n        /* \"flashloan-implementation/FlashLoan.sol\":2351:2355  swap */\n      tag_31\n        /* \"flashloan-implementation/FlashLoan.sol\":2351:2515  swap(... */\n      jump\t// in\n    tag_104:\n        /* \"flashloan-implementation/FlashLoan.sol\":2526:2540  uint totalDebt */\n      0x00\n        /* \"flashloan-implementation/FlashLoan.sol\":2543:2560  _amount.add(_fee) */\n      tag_105\n        /* \"flashloan-implementation/FlashLoan.sol\":2555:2559  _fee */\n      dup11\n        /* \"flashloan-implementation/FlashLoan.sol\":2543:2550  _amount */\n      dup13\n        /* \"flashloan-implementation/FlashLoan.sol\":2543:2554  _amount.add */\n      tag_106\n      swap1\n        /* \"flashloan-implementation/FlashLoan.sol\":2543:2560  _amount.add(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"flashloan-implementation/FlashLoan.sol\":2526:2560  uint totalDebt = _amount.add(_fee) */\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoan.sol\":2570:2622  transferFundsBackToPoolInternal(_reserve, totalDebt) */\n      tag_107\n        /* \"flashloan-implementation/FlashLoan.sol\":2602:2610  _reserve */\n      dup13\n        /* \"flashloan-implementation/FlashLoan.sol\":2612:2621  totalDebt */\n      dup3\n        /* \"flashloan-implementation/FlashLoan.sol\":2570:2601  transferFundsBackToPoolInternal */\n      tag_108\n        /* \"flashloan-implementation/FlashLoan.sol\":2570:2622  transferFundsBackToPoolInternal(_reserve, totalDebt) */\n      jump\t// in\n    tag_107:\n        /* \"flashloan-implementation/FlashLoan.sol\":1296:2629  function executeOperation(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_110\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_48\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_27\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2119:2120  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2099:2107  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2091:2164  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2208:2216  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2200:2206  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2236:2244  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2227:2233  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2227:2244  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":806:811  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":836:859  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":861:863  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":865:870  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":786:805  _callOptionalReturn */\n      tag_118\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"flashloan-implementation/exchange/Exchange.sol\":766:1061  function _safeTransferFrom... */\n    tag_97:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":924:933  bool sent */\n      0x00\n        /* \"flashloan-implementation/exchange/Exchange.sol\":953:965  tokenAddress */\n      dup5\n        /* \"flashloan-implementation/exchange/Exchange.sol\":936:979  IBasicERC20Token(tokenAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"flashloan-implementation/exchange/Exchange.sol\":980:986  sender */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":988:997  recipient */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":999:1005  amount */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":936:1006  IBasicERC20Token(tokenAddress).transferFrom(sender, recipient, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/exchange/Exchange.sol\":924:1006  bool sent = IBasicERC20Token(tokenAddress).transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1024:1028  sent */\n      dup1\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1016:1054  require(sent, \"Token transfer failed\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":766:1061  function _safeTransferFrom... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1563:1799  function getBalanceInternal(address _target, address _reserve) internal view returns(uint256) {... */\n    tag_101:\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1648:1655  uint256 */\n      0x00\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":685:727  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1670:1692  _reserve == ethAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1670:1678  _reserve */\n      dup3\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1670:1692  _reserve == ethAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1667:1741  if(_reserve == ethAddress) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1715:1722  _target */\n      dup3\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1715:1730  _target.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1708:1730  return _target.balance */\n      swap1\n      pop\n      jump(tag_125)\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1667:1741  if(_reserve == ethAddress) {... */\n    tag_126:\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1764:1772  _reserve */\n      dup2\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1757:1783  IERC20(_reserve).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1784:1791  _target */\n      dup5\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1757:1792  IERC20(_reserve).balanceOf(_target) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1750:1792  return IERC20(_reserve).balanceOf(_target) */\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1563:1799  function getBalanceInternal(address _target, address _reserve) internal view returns(uint256) {... */\n    tag_125:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_106:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":968:1182  function transferFundsBackToPoolInternal(address _reserve, uint256 _amount) internal {... */\n    tag_108:\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1063:1083  address payable core */\n      0x00\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1086:1103  addressesProvider */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1086:1122  addressesProvider.getLendingPoolCore */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xed6ff760\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1086:1124  addressesProvider.getLendingPoolCore() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1063:1124  address payable core = addressesProvider.getLendingPoolCore() */\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1134:1175  transferInternal(core, _reserve, _amount) */\n      tag_138\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1151:1155  core */\n      dup2\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1157:1165  _reserve */\n      dup5\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1167:1174  _amount */\n      dup5\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1134:1150  transferInternal */\n      tag_139\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1134:1175  transferInternal(core, _reserve, _amount) */\n      jump\t// in\n    tag_138:\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":968:1182  function transferFundsBackToPoolInternal(address _reserve, uint256 _amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_141\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_142\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3515:3516  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3495:3505  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_143\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1188:1557  function transferInternal(address payable _destination, address _reserve, uint256 _amount) internal {... */\n    tag_139:\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":685:727  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1301:1323  _reserve == ethAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1301:1309  _reserve */\n      dup3\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1301:1323  _reserve == ethAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1298:1489  if(_reserve == ethAddress) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1340:1352  bool success */\n      0x00\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1358:1370  _destination */\n      dup4\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1358:1375  _destination.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1383:1390  _amount */\n      dup3\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1358:1395  _destination.call{value: _amount}(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_150\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_149)\n    tag_150:\n      0x60\n      swap2\n      pop\n    tag_149:\n      pop\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1339:1395  (bool success, ) = _destination.call{value: _amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1428:1432  true */\n      0x01\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1417:1432  success == true */\n      iszero\n      iszero\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1417:1424  success */\n      dup2\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1417:1432  success == true */\n      iszero\n      iszero\n      eq\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1409:1458  require(success == true, \"Couldn't transfer ETH\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x436f756c646e2774207472616e73666572204554480000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1472:1479  return; */\n      pop\n      jump(tag_146)\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1298:1489  if(_reserve == ethAddress) {... */\n    tag_147:\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1498:1550  IERC20(_reserve).safeTransfer(_destination, _amount) */\n      tag_152\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1528:1540  _destination */\n      dup4\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1542:1549  _amount */\n      dup3\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1505:1513  _reserve */\n      dup5\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1498:1527  IERC20(_reserve).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_77\n      swap1\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1498:1550  IERC20(_reserve).safeTransfer(_destination, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"flashloan-implementation/FlashLoanReceiverBase.sol\":1188:1557  function transferInternal(address payable _destination, address _reserve, uint256 _amount) internal {... */\n    tag_146:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_142:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_154\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n      tag_155\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_154:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4735:4747  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4792:4797  value */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n      selfbalance\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_158\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_159\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5022:5033  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_161:\n      0x20\n      dup4\n      lt\n      tag_163\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_161)\n    tag_163:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_166\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_165)\n    tag_166:\n      0x60\n      swap2\n      pop\n    tag_165:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_167\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_159:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":786:790  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":989:1001  uint256 size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1098:1105  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1131:1132  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1124:1128  size */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_168:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7257:7274  return returndata */\n      swap1\n      pop\n      jump(tag_170)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_171:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7395:7396  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7375:7385  returndata */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_173:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_175:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_177\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_175)\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_178\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_178:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_170:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_03555d648df7e6b723014309a5935ca50a462f434066140d1d586da12a6bd4bc 5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2032\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_8fe07d1a7bc8ed40574aa57beae4fbd43367cc89459755c316997d76d102b27d 496e76616c69642062616c616e63652c207761732074686520666c6173684c6f616e207375636365737366756c3f\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_eb963c2896a2206169f545030cec46d24f6bea9389c472acb8e0f48da8322999 5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2031\n\n    auxdata: 0xa26469706673582212206cac3802777da3a755759045cd4a5ee7368c1eef100928327cca062e0647589064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405230600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005157600080fd5b50604051611c07380380611c078339818101604052602081101561007457600080fd5b810190808051906020019092919050505080600061009661017c60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610184565b600033905090565b611a74806101936000396000f3fe60806040526004361061007f5760003560e01c8063a64e3dd71161004e578063a64e3dd714610185578063c72c4d101461024a578063ee8725581461028b578063f2fde38b1461034557610086565b806336c404771461008b57806351cff8d9146100dc578063715018a61461012d5780638da5cb5b1461014457610086565b3661008657005b600080fd5b34801561009757600080fd5b506100da600480360360208110156100ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610396565b005b3480156100e857600080fd5b5061012b600480360360208110156100ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610627565b005b34801561013957600080fd5b506101426108b1565b005b34801561015057600080fd5b50610159610a1e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019157600080fd5b50610248600480360360c08110156101a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610a47565b005b34801561025657600080fd5b5061025f610ca3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029757600080fd5b50610343600480360360808110156102ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156102ff57600080fd5b82018360208201111561031157600080fd5b8035906020019184600183028401116401000000008311171561033357600080fd5b9091929391929390505050610cc9565b005b34801561035157600080fd5b506103946004803603602081101561036857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610df4565b005b61039e610fe6565b73ffffffffffffffffffffffffffffffffffffffff166103bc610a1e565b73ffffffffffffffffffffffffffffffffffffffff1614610445576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60606040518060200160405280600081525090506000670de0b6b3a764000090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d057600080fd5b505afa1580156104e4573d6000803e3d6000fd5b505050506040513d60208110156104fa57600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff16635cffe9de308685876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105ba57808201518184015260208101905061059f565b50505050905090810190601f1680156105e75780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561060957600080fd5b505af115801561061d573d6000803e3d6000fd5b5050505050505050565b61062f610fe6565b73ffffffffffffffffffffffffffffffffffffffff1661064d610a1e565b73ffffffffffffffffffffffffffffffffffffffff16146106d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107785760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610771573d6000803e3d6000fd5b5050610848565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156107df57600080fd5b505afa1580156107f3573d6000803e3d6000fd5b505050506040513d602081101561080957600080fd5b8101908080519060200190929190505050905061084733828473ffffffffffffffffffffffffffffffffffffffff16610fee9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b6108b9610fe6565b73ffffffffffffffffffffffffffffffffffffffff166108d7610a1e565b73ffffffffffffffffffffffffffffffffffffffff1614610960576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b858585858585818673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e86306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610ad357600080fd5b505afa158015610ae7573d6000803e3d6000fd5b505050506040513d6020811015610afd57600080fd5b81019080805190602001909291905050501015610b65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f815260200180611a00603f913960400191505060405180910390fd5b808573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610beb57600080fd5b505afa158015610bff573d6000803e3d6000fd5b505050506040513d6020811015610c1557600080fd5b81019080805190602001909291905050501015610c7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f81526020018061191d603f913960400191505060405180910390fd5b610c898c8b8b8b611090565b610c958b8a8c8a611090565b505050505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cd330866111d8565b841115610d2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806119a8602e913960400191505060405180910390fd5b600073ff795577d9ac8bd7d90ee22b6c1703490b6512fd905060007313512979ade267ab5100878e2e0f485b568328a490506000732853eb1d81342453c6fa7ff7d03c97a8f142eaba90506000733ceee3cf67314501ec960ac81e7e5a58b99dbb7a90506000670de0b6b3a764000090506000670de0b6b3a76400009050610db7868686868686610a47565b610dc5858785878587610a47565b6000610dda8a8c6112ec90919063ffffffff16565b9050610de68c82611374565b505050505050505050505050565b610dfc610fe6565b73ffffffffffffffffffffffffffffffffffffffff16610e1a610a1e565b73ffffffffffffffffffffffffffffffffffffffff1614610ea3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061195c6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b61108b8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061142b565b505050565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561112157600080fd5b505af1158015611135573d6000803e3d6000fd5b505050506040513d602081101561114b57600080fd5b81019080805190602001909291905050509050806111d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611241578273ffffffffffffffffffffffffffffffffffffffff163190506112e6565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156112a857600080fd5b505afa1580156112bc573d6000803e3d6000fd5b505050506040513d60208110156112d257600080fd5b810190808051906020019092919050505090505b92915050565b60008082840190508381101561136a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ed6ff7606040518163ffffffff1660e01b815260040160206040518083038186803b1580156113de57600080fd5b505afa1580156113f2573d6000803e3d6000fd5b505050506040513d602081101561140857600080fd5b8101908080519060200190929190505050905061142681848461151a565b505050565b606061148d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661167c9092919063ffffffff16565b9050600081511115611515578080602001905160208110156114ae57600080fd5b8101908080519060200190929190505050611514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806119d6602a913960400191505060405180910390fd5b5b505050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561164b5760008373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146115c2576040519150601f19603f3d011682016040523d82523d6000602084013e6115c7565b606091505b505090506001151581151514611645576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436f756c646e2774207472616e7366657220455448000000000000000000000081525060200191505060405180910390fd5b50611677565b61167683828473ffffffffffffffffffffffffffffffffffffffff16610fee9092919063ffffffff16565b5b505050565b606061168b8484600085611694565b90509392505050565b6060824710156116ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119826026913960400191505060405180910390fd5b6116f88561183d565b61176a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106117ba5780518252602082019150602081019050602083039250611797565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461181c576040519150601f19603f3d011682016040523d82523d6000602084013e611821565b606091505b5091509150611831828286611850565b92505050949350505050565b600080823b905060008111915050919050565b6060831561186057829050611915565b6000835111156118735782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118da5780820151818401526020810190506118bf565b50505050905090810190601f1680156119075780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e20324f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e76616c69642062616c616e63652c207761732074686520666c6173684c6f616e207375636365737366756c3f5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2031a26469706673582212206cac3802777da3a755759045cd4a5ee7368c1eef100928327cca062e0647589064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C07 CODESIZE SUB DUP1 PUSH2 0x1C07 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 PUSH2 0x96 PUSH2 0x17C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x184 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A74 DUP1 PUSH2 0x193 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA64E3DD7 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA64E3DD7 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xC72C4D10 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEE872558 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x36C40477 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x144 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x627 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x8B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA47 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xCC9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDF4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39E PUSH2 0xFE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BC PUSH2 0xA1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x261BF8B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5CFFE9DE ADDRESS DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x59F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5E7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x62F PUSH2 0xFE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x64D PUSH2 0xA1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x771 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x848 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x847 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8B9 PUSH2 0xFE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D7 PUSH2 0xA1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x960 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 DUP6 DUP6 DUP2 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP7 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A00 PUSH1 0x3F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP6 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x191D PUSH1 0x3F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC89 DUP13 DUP12 DUP12 DUP12 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0xC95 DUP12 DUP11 DUP13 DUP11 PUSH2 0x1090 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCD3 ADDRESS DUP7 PUSH2 0x11D8 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19A8 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD SWAP1 POP PUSH1 0x0 PUSH20 0x13512979ADE267AB5100878E2E0F485B568328A4 SWAP1 POP PUSH1 0x0 PUSH20 0x2853EB1D81342453C6FA7FF7D03C97A8F142EABA SWAP1 POP PUSH1 0x0 PUSH20 0x3CEEE3CF67314501EC960AC81E7E5A58B99DBB7A SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH2 0xDB7 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0xDC5 DUP6 DUP8 DUP6 DUP8 DUP6 DUP8 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDA DUP11 DUP13 PUSH2 0x12EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xDE6 DUP13 DUP3 PUSH2 0x1374 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDFC PUSH2 0xFE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1A PUSH2 0xA1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x195C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x108B DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x142B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1135 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x114B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1241 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP PUSH2 0x12E6 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x136A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xED6FF760 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x1426 DUP2 DUP5 DUP5 PUSH2 0x151A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x148D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x167C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1515 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19D6 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x164B JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x1645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C646E2774207472616E73666572204554480000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x1676 DUP4 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x168B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1694 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x16EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1982 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16F8 DUP6 PUSH2 0x183D JUMP JUMPDEST PUSH2 0x176A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x17BA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x181C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1831 DUP3 DUP3 DUP7 PUSH2 0x1850 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1860 JUMPI DUP3 SWAP1 POP PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1873 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18DA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18BF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1907 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID SLOAD PUSH9 0x697320636F6E747261 PUSH4 0x74206973 KECCAK256 PUSH15 0x6F7420617070726F76656420746F20 PUSH20 0x70656E64207468697320616D6F756E742066726F PUSH14 0x20746F6B656E20324F776E61626C PUSH6 0x3A206E657720 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C496E7661 PUSH13 0x69642062616C616E63652C2077 PUSH2 0x7320 PUSH21 0x686520666C6173684C6F616E207375636365737366 PUSH22 0x6C3F5361666545524332303A204552433230206F7065 PUSH19 0x6174696F6E20646964206E6F74207375636365 PUSH6 0x645468697320 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH10 0x73206E6F742061707072 PUSH16 0x76656420746F207370656E6420746869 PUSH20 0x20616D6F756E742066726F6D20746F6B656E2031 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xAC3802777DA3A755759045CD4A 0x5E 0xE7 CALLDATASIZE DUP13 0x1E 0xEF LT MULMOD 0x28 ORIGIN PUSH29 0xCA062E0647589064736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "234:2398:0:-:0;;;325:4;298:32;;;;;;;;;;;;;;;;;;;;670:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;732:16;884:17:8;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;903:16:1;851:17;;:69;;;;;;;;;;;;;;;;;;796:131;670:88:0;234:2398;;598:104:14;651:15;685:10;678:17;;598:104;:::o;234:2398:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007f5760003560e01c8063a64e3dd71161004e578063a64e3dd714610185578063c72c4d101461024a578063ee8725581461028b578063f2fde38b1461034557610086565b806336c404771461008b57806351cff8d9146100dc578063715018a61461012d5780638da5cb5b1461014457610086565b3661008657005b600080fd5b34801561009757600080fd5b506100da600480360360208110156100ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610396565b005b3480156100e857600080fd5b5061012b600480360360208110156100ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610627565b005b34801561013957600080fd5b506101426108b1565b005b34801561015057600080fd5b50610159610a1e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019157600080fd5b50610248600480360360c08110156101a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610a47565b005b34801561025657600080fd5b5061025f610ca3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029757600080fd5b50610343600480360360808110156102ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156102ff57600080fd5b82018360208201111561031157600080fd5b8035906020019184600183028401116401000000008311171561033357600080fd5b9091929391929390505050610cc9565b005b34801561035157600080fd5b506103946004803603602081101561036857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610df4565b005b61039e610fe6565b73ffffffffffffffffffffffffffffffffffffffff166103bc610a1e565b73ffffffffffffffffffffffffffffffffffffffff1614610445576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60606040518060200160405280600081525090506000670de0b6b3a764000090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d057600080fd5b505afa1580156104e4573d6000803e3d6000fd5b505050506040513d60208110156104fa57600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff16635cffe9de308685876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105ba57808201518184015260208101905061059f565b50505050905090810190601f1680156105e75780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561060957600080fd5b505af115801561061d573d6000803e3d6000fd5b5050505050505050565b61062f610fe6565b73ffffffffffffffffffffffffffffffffffffffff1661064d610a1e565b73ffffffffffffffffffffffffffffffffffffffff16146106d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107785760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610771573d6000803e3d6000fd5b5050610848565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156107df57600080fd5b505afa1580156107f3573d6000803e3d6000fd5b505050506040513d602081101561080957600080fd5b8101908080519060200190929190505050905061084733828473ffffffffffffffffffffffffffffffffffffffff16610fee9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b6108b9610fe6565b73ffffffffffffffffffffffffffffffffffffffff166108d7610a1e565b73ffffffffffffffffffffffffffffffffffffffff1614610960576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b858585858585818673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e86306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610ad357600080fd5b505afa158015610ae7573d6000803e3d6000fd5b505050506040513d6020811015610afd57600080fd5b81019080805190602001909291905050501015610b65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f815260200180611a00603f913960400191505060405180910390fd5b808573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610beb57600080fd5b505afa158015610bff573d6000803e3d6000fd5b505050506040513d6020811015610c1557600080fd5b81019080805190602001909291905050501015610c7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f81526020018061191d603f913960400191505060405180910390fd5b610c898c8b8b8b611090565b610c958b8a8c8a611090565b505050505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cd330866111d8565b841115610d2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806119a8602e913960400191505060405180910390fd5b600073ff795577d9ac8bd7d90ee22b6c1703490b6512fd905060007313512979ade267ab5100878e2e0f485b568328a490506000732853eb1d81342453c6fa7ff7d03c97a8f142eaba90506000733ceee3cf67314501ec960ac81e7e5a58b99dbb7a90506000670de0b6b3a764000090506000670de0b6b3a76400009050610db7868686868686610a47565b610dc5858785878587610a47565b6000610dda8a8c6112ec90919063ffffffff16565b9050610de68c82611374565b505050505050505050505050565b610dfc610fe6565b73ffffffffffffffffffffffffffffffffffffffff16610e1a610a1e565b73ffffffffffffffffffffffffffffffffffffffff1614610ea3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061195c6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b61108b8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061142b565b505050565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561112157600080fd5b505af1158015611135573d6000803e3d6000fd5b505050506040513d602081101561114b57600080fd5b81019080805190602001909291905050509050806111d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611241578273ffffffffffffffffffffffffffffffffffffffff163190506112e6565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156112a857600080fd5b505afa1580156112bc573d6000803e3d6000fd5b505050506040513d60208110156112d257600080fd5b810190808051906020019092919050505090505b92915050565b60008082840190508381101561136a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ed6ff7606040518163ffffffff1660e01b815260040160206040518083038186803b1580156113de57600080fd5b505afa1580156113f2573d6000803e3d6000fd5b505050506040513d602081101561140857600080fd5b8101908080519060200190929190505050905061142681848461151a565b505050565b606061148d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661167c9092919063ffffffff16565b9050600081511115611515578080602001905160208110156114ae57600080fd5b8101908080519060200190929190505050611514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806119d6602a913960400191505060405180910390fd5b5b505050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561164b5760008373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146115c2576040519150601f19603f3d011682016040523d82523d6000602084013e6115c7565b606091505b505090506001151581151514611645576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436f756c646e2774207472616e7366657220455448000000000000000000000081525060200191505060405180910390fd5b50611677565b61167683828473ffffffffffffffffffffffffffffffffffffffff16610fee9092919063ffffffff16565b5b505050565b606061168b8484600085611694565b90509392505050565b6060824710156116ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119826026913960400191505060405180910390fd5b6116f88561183d565b61176a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106117ba5780518252602082019150602081019050602083039250611797565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461181c576040519150601f19603f3d011682016040523d82523d6000602084013e611821565b606091505b5091509150611831828286611850565b92505050949350505050565b600080823b905060008111915050919050565b6060831561186057829050611915565b6000835111156118735782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118da5780820151818401526020810190506118bf565b50505050905090810190601f1680156119075780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e20324f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e76616c69642062616c616e63652c207761732074686520666c6173684c6f616e207375636365737366756c3f5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2031a26469706673582212206cac3802777da3a755759045cd4a5ee7368c1eef100928327cca062e0647589064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA64E3DD7 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA64E3DD7 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xC72C4D10 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEE872558 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x36C40477 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x144 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x627 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x8B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA47 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xCC9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDF4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39E PUSH2 0xFE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BC PUSH2 0xA1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x261BF8B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5CFFE9DE ADDRESS DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x59F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5E7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x62F PUSH2 0xFE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x64D PUSH2 0xA1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x771 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x848 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x847 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8B9 PUSH2 0xFE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D7 PUSH2 0xA1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x960 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 DUP6 DUP6 DUP2 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP7 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A00 PUSH1 0x3F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP6 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x191D PUSH1 0x3F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC89 DUP13 DUP12 DUP12 DUP12 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0xC95 DUP12 DUP11 DUP13 DUP11 PUSH2 0x1090 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCD3 ADDRESS DUP7 PUSH2 0x11D8 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19A8 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD SWAP1 POP PUSH1 0x0 PUSH20 0x13512979ADE267AB5100878E2E0F485B568328A4 SWAP1 POP PUSH1 0x0 PUSH20 0x2853EB1D81342453C6FA7FF7D03C97A8F142EABA SWAP1 POP PUSH1 0x0 PUSH20 0x3CEEE3CF67314501EC960AC81E7E5A58B99DBB7A SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH2 0xDB7 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0xDC5 DUP6 DUP8 DUP6 DUP8 DUP6 DUP8 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDA DUP11 DUP13 PUSH2 0x12EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xDE6 DUP13 DUP3 PUSH2 0x1374 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDFC PUSH2 0xFE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1A PUSH2 0xA1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x195C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x108B DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x142B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1135 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x114B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1241 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP PUSH2 0x12E6 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x136A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xED6FF760 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x1426 DUP2 DUP5 DUP5 PUSH2 0x151A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x148D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x167C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1515 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19D6 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x164B JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x1645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C646E2774207472616E73666572204554480000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x1676 DUP4 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x168B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1694 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x16EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1982 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16F8 DUP6 PUSH2 0x183D JUMP JUMPDEST PUSH2 0x176A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x17BA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x181C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1831 DUP3 DUP3 DUP7 PUSH2 0x1850 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1860 JUMPI DUP3 SWAP1 POP PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1873 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18DA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18BF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1907 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID SLOAD PUSH9 0x697320636F6E747261 PUSH4 0x74206973 KECCAK256 PUSH15 0x6F7420617070726F76656420746F20 PUSH20 0x70656E64207468697320616D6F756E742066726F PUSH14 0x20746F6B656E20324F776E61626C PUSH6 0x3A206E657720 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C496E7661 PUSH13 0x69642062616C616E63652C2077 PUSH2 0x7320 PUSH21 0x686520666C6173684C6F616E207375636365737366 PUSH22 0x6C3F5361666545524332303A204552433230206F7065 PUSH19 0x6174696F6E20646964206E6F74207375636365 PUSH6 0x645468697320 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH10 0x73206E6F742061707072 PUSH16 0x76656420746F207370656E6420746869 PUSH20 0x20616D6F756E742066726F6D20746F6B656E2031 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xAC3802777DA3A755759045CD4A 0x5E 0xE7 CALLDATASIZE DUP13 0x1E 0xEF LT MULMOD 0x28 ORIGIN PUSH29 0xCA062E0647589064736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "234:2398:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;865:543:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1717:145:8;;;;;;;;;;;;;:::i;:::-;;1085:85;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1067:531:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;733:56:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1296:1333:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2011:240:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;911:280:0;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;973:17:0::1;:22;;;;;;;;;;;::::0;::::1;;1005:11;1019:7;1005:21;;1037:26;1081:17;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;1037:79;;1126:11;:21;;;1156:4;1163:6;1171;1179:4;1126:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1367:1:8;;;911:280:0::0;:::o;865:543:5:-;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:17:5::1;640:1:::0;964:22:::1;;:13;:22;;;960:375;;;1002:12;1025:4;1002:28;;1101:4;:12;;;1086:27;;1127:10;:19;;:33;1147:12;1127:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;960:375;;;;1212:13;1206:30;;;1245:4;1206:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;1191:60;;1265:59;1299:10;1311:12;1271:13;1265:33;;;;:59;;;;;:::i;:::-;960:375;1373:13;1349:52;;1361:10;1349:52;;;1388:12;1349:52;;;;;;;;;;;;;;;;;;1367:1:8;865:543:5::0;:::o;1717:145:8:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;1085:85::-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;1067:531:6:-;1302:6;1318;1334:13;1357;1380:14;1404;428;377:6;360:34;;;395:13;418:4;360:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:82;;330:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:14;588:6;571:34;;;606:13;629:4;571:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:82;;541:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1439:71:::1;1457:6;1465:13;1480;1495:14;1439:17;:71::i;:::-;1520;1538:6;1546:13;1561;1576:14;1520:17;:71::i;:::-;1067:531:::0;;;;;;;;;;;;:::o;733:56:1:-;;;;;;;;;;;;;:::o;1296:1333:0:-;1500:43;1527:4;1534:8;1500:18;:43::i;:::-;1489:7;:54;;1481:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1757:14;1774:42;1757:59;;1826:14;1843:42;1826:59;;1895:21;1919:42;1895:66;;2021:21;2045:42;2021:66;;2097:19;2119:7;2097:29;;2136:19;2158:7;2136:29;;2176:164;2194:6;2214;2234:13;2261;2288:14;2316;2176:4;:164::i;:::-;2351;2369:6;2389;2409:13;2436;2463:14;2491;2351:4;:164::i;:::-;2526:14;2543:17;2555:4;2543:7;:11;;:17;;;;:::i;:::-;2526:34;;2570:52;2602:8;2612:9;2570:31;:52::i;:::-;1296:1333;;;;;;;;;;;;:::o;2011:240:8:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:14:-;651:15;685:10;678:17;;598:104;:::o;704:175:12:-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:19;:86::i;:::-;704:175;;;:::o;766:295:6:-;924:9;953:12;936:43;;;980:6;988:9;999:6;936:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;924:82;;1024:4;1016:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;766:295;;;;;:::o;1563:236:1:-;1648:7;685:42;1670:22;;:8;:22;;;1667:74;;;1715:7;:15;;;1708:22;;;;1667:74;1764:8;1757:26;;;1784:7;1757:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1750:42;;1563:236;;;;;:::o;2690:175:9:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;968:214:1:-;1063:20;1086:17;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:61;;1134:41;1151:4;1157:8;1167:7;1134:16;:41::i;:::-;968:214;;;:::o;2967:751:12:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;3412:27;;;;:69;;;;;:::i;:::-;3386:95;;3515:1;3495:10;:17;:21;3491:221;;;3635:10;3624:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:221;2967:751;;;:::o;1188:369:1:-;685:42;1301:22;;:8;:22;;;1298:191;;;1340:12;1358;:17;;1383:7;1358:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:56;;;1428:4;1417:15;;:7;:15;;;1409:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1472:7;;;1298:191;1498:52;1528:12;1542:7;1505:8;1498:29;;;;:52;;;;;:::i;:::-;1188:369;;;;:::o;3581:193:13:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1354400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addressesProvider()": "1069",
								"executeOperation(address,uint256,uint256,bytes)": "infinite",
								"flashloan(address)": "infinite",
								"owner()": "1122",
								"renounceOwnership()": "24374",
								"swap(address,address,address,address,uint256,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 234,
									"end": 2632,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 329,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 298,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 298,
									"end": 330,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 298,
									"end": 330,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 298,
									"end": 330,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 298,
									"end": 330,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 670,
									"end": 758,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 758,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 670,
									"end": 758,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 670,
									"end": 758,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 670,
									"end": 758,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 670,
									"end": 758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 670,
									"end": 758,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 758,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 670,
									"end": 758,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 670,
									"end": 758,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 670,
									"end": 758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 732,
									"end": 748,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 884,
									"end": 901,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 884,
									"end": 916,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 884,
									"end": 916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 935,
									"end": 944,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 932,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 988,
									"end": 989,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 8,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "LOG3",
									"source": 8
								},
								{
									"begin": 850,
									"end": 1009,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 903,
									"end": 919,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 851,
									"end": 868,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 851,
									"end": 868,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 851,
									"end": 920,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 851,
									"end": 920,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 851,
									"end": 920,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 851,
									"end": 920,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 851,
									"end": 920,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 796,
									"end": 927,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 670,
									"end": 758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 2632,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206cac3802777da3a755759045cd4a5ee7368c1eef100928327cca062e0647589064736f6c634300060c0033",
									".code": [
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "A64E3DD7"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "A64E3DD7"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "C72C4D10"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "EE872558"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "36C40477"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "51CFF8D9"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 2632,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 733,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 973,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 973,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 973,
											"end": 995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 973,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 973,
											"end": 995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 973,
											"end": 995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 973,
											"end": 995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1005,
											"end": 1026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1081,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1081,
											"end": 1098,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1098,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1081,
											"end": 1098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "261BF8B"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1147,
											"name": "PUSH",
											"source": 0,
											"value": "5CFFE9DE"
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1183,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1191,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 933,
											"end": 950,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 964,
											"end": 986,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 964,
											"end": 986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 964,
											"end": 977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 964,
											"end": 986,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 964,
											"end": 986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 964,
											"end": 986,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1029,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1002,
											"end": 1030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1002,
											"end": 1030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1105,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1113,
											"name": "BALANCE",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1113,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1146,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1127,
											"end": 1146,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 1147,
											"end": 1159,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1236,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1236,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1236,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1245,
											"end": 1249,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1298,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1265,
											"end": 1298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1371,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099"
										},
										{
											"begin": 1388,
											"end": 1400,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1357,
											"end": 1370,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1394,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1418,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 428,
											"end": 442,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 377,
											"end": 383,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 360,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 360,
											"end": 394,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 360,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 395,
											"end": 408,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 418,
											"end": 422,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 442,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 360,
											"end": 442,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH data",
											"source": 6,
											"value": "EB963C2896A2206169F545030CEC46D24F6BEA9389C472ACB8E0F48DA8322999"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 639,
											"end": 653,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 594,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 606,
											"end": 619,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 629,
											"end": 633,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 653,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 653,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH data",
											"source": 6,
											"value": "3555D648DF7E6B723014309A5935CA50A462F434066140D1D586DA12A6BD4BC"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1457,
											"end": 1463,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1493,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1439,
											"end": 1510,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1439,
											"end": 1510,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1439,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1538,
											"end": 1544,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1574,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1590,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1520,
											"end": 1591,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1520,
											"end": 1591,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1520,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 789,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1527,
											"end": 1531,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1542,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1500,
											"end": 1543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1500,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1500,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1543,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "PUSH data",
											"source": 0,
											"value": "8FE07D1A7BC8ED40574AA57BEAE4FBD43367CC89459755C316997D76D102B27D"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1481,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1816,
											"name": "PUSH",
											"source": 0,
											"value": "FF795577D9AC8BD7D90EE22B6C1703490B6512FD"
										},
										{
											"begin": 1757,
											"end": 1816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "PUSH",
											"source": 0,
											"value": "13512979ADE267AB5100878E2E0F485B568328A4"
										},
										{
											"begin": 1826,
											"end": 1885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1961,
											"name": "PUSH",
											"source": 0,
											"value": "2853EB1D81342453C6FA7FF7D03C97A8F142EABA"
										},
										{
											"begin": 1895,
											"end": 1961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "3CEEE3CF67314501EC960AC81E7E5A58B99DBB7A"
										},
										{
											"begin": 2021,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2165,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2136,
											"end": 2165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2136,
											"end": 2165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2274,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2302,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2330,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2176,
											"end": 2340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2340,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2176,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2369,
											"end": 2375,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2422,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2449,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2477,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2491,
											"end": 2505,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2351,
											"end": 2515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2351,
											"end": 2515,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2351,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2555,
											"end": 2559,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2550,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2602,
											"end": 2610,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2570,
											"end": 2622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2570,
											"end": 2622,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2570,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 2629,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2107,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH data",
											"source": 8,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2216,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 786,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 861,
											"end": 863,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 786,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 965,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 988,
											"end": 997,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1005,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1024,
											"end": 1028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1563,
											"end": 1799,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1563,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 1670,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1692,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1741,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1667,
											"end": 1741,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1730,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1715,
											"end": 1730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1730,
											"name": "BALANCE",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1708,
											"end": 1730,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1741,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1667,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1799,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1563,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1799,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1799,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 968,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 968,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1122,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "ED6FF760"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1151,
											"end": 1155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1165,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1174,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1134,
											"end": 1175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1134,
											"end": 1175,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1134,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3516,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3505,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH data",
											"source": 12,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1188,
											"end": 1557,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1188,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 685,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 1301,
											"end": 1323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1323,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1489,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1298,
											"end": 1489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1340,
											"end": 1352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1432,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1417,
											"end": 1432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1432,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "436F756C646E2774207472616E73666572204554480000000000000000000000"
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1409,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1472,
											"end": 1479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1298,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1513,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1527,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1498,
											"end": 1527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1498,
											"end": 1527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1550,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1550,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1498,
											"end": 1550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1550,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1498,
											"end": 1550,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1498,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1557,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1188,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1557,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4767,
											"end": 4788,
											"name": "SELFBALANCE",
											"source": 13
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH data",
											"source": 13,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "CODECOPY",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7385,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"3555D648DF7E6B723014309A5935CA50A462F434066140D1D586DA12A6BD4BC": "5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2032",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"8FE07D1A7BC8ED40574AA57BEAE4FBD43367CC89459755C316997D76D102B27D": "496e76616c69642062616c616e63652c207761732074686520666c6173684c6f616e207375636365737366756c3f",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"EB963C2896A2206169F545030CEC46D24F6BEA9389C472ACB8E0F48DA8322999": "5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2031"
									}
								}
							}
						},
						"methodIdentifiers": {
							"addressesProvider()": "c72c4d10",
							"executeOperation(address,uint256,uint256,bytes)": "ee872558",
							"flashloan(address)": "36c40477",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"swap(address,address,address,address,uint256,uint256)": "a64e3dd7",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProviderV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"flashloan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerOfToken1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerOfToken2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOfToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOfToken2\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw asset.\",\"params\":{\"_assetAddress\":\"Asset to be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":\"_addressProvider = address of one of the Lending Pool Providers of Aave using DAI LendingPool address 0x506B0B2CF20FAA8f38a4E2B524EE43e1f4458Cc5  A list of all deployed contract addresses can be found athttps://docs.aave.com/developers/v/1.0/deployed-contracts/deployed-contract-instances\",\"executeOperation(address,uint256,uint256,bytes)\":{\"notice\":\"This function is called after your contract has received the flash loaned amount\"},\"flashloan(address)\":{\"notice\":\"_asset = address of the asset we want to flash loan Flash loan 1000000000000000000 wei (1 ether) worth of `_asset`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"flashloan-implementation/FlashLoan.sol\":\"FlashloanV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"flashloan-implementation/FlashLoan.sol\":{\"keccak256\":\"0x0314738c11fb5c2d9056ecc02e973565cac1fea80fc316f065aa9af6567da793\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58d8b44141bf67d0a58d1623d0b64ac926fc7219f0528ec12664ba9d156e1f40\",\"dweb:/ipfs/QmNRpm3bwvHgByfCiFHAaDdPu6eJDdSS1KqWUVVs2ZffMd\"]},\"flashloan-implementation/FlashLoanReceiverBase.sol\":{\"keccak256\":\"0xe9a6111a392657361e8a977feb1e0e6194039dd607286d7587007d96dd8216c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de80d790dbd0b046fa65c6e712a04a14021ef31a4449ad43cba1ac52d2ece7f0\",\"dweb:/ipfs/QmU7Ru4B79C3cJmwiXiF4GZJWG4PASRg6ANiTmMMTYwp2Y\"]},\"flashloan-implementation/IFlashLoanReceiver.sol\":{\"keccak256\":\"0x9857226b61eeb84b5e1bb5c4623c3317ef0eaae623bad0bccb9f578813275118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ea082aafc67ff37260f2a06070cfb1d300a164608508bff1402c56fee6fd61\",\"dweb:/ipfs/QmZACARtc91sydKzr1npeprkjQyVAwHxzZ4v7dPswzrALA\"]},\"flashloan-implementation/ILendingPool.sol\":{\"keccak256\":\"0x43888d9015041ab10a7e06f13e6cdc04637b624dd6905d58cb205e7087a6c9d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://465e11c527c1ea40212504f8cde1a1122e7c87509b39cdb1037a096f773ff1a0\",\"dweb:/ipfs/QmY4GpdiWtq4qJfQPPbmiwwunPDvaZR55dAKTQyJuW9EFK\"]},\"flashloan-implementation/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x1608c0d2363569348e27920624a3e1931293bd5e317e6bfa9b5d27e79f82b2fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7fc925ef78b2fdea7480e6b1e5ed8093cd8004ab95b1ca0e2ad6f2bc22a172\",\"dweb:/ipfs/QmS9qLZqg4LUfCLPa1ZjFbvaANjdwegqWQiqujyKdM1hdL\"]},\"flashloan-implementation/Withdrawable.sol\":{\"keccak256\":\"0xbac3564b052027faf37a3caef94c55f89a6898c072b2b1250f083ab717de629a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bf47c10c37b9edec0f18030dadae943f74cdbf4ed42326c3a0b44bd1f7c92f9\",\"dweb:/ipfs/QmTHrqgeUo58hSZ9hq7KSJ8FwCvemP8dpPeQnbrf77m8M2\"]},\"flashloan-implementation/exchange/Exchange.sol\":{\"keccak256\":\"0xc61bd44104367c24cb14daa6bac30ea058d591ae6bc05cb040eabc4fcefe11fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd46bd1cd655dc3692ecb9f551a19189bfc7e76ad94a76b9a188e72cfd871f74\",\"dweb:/ipfs/QmWtoEmcJZKmgqmwEzBFXmkTMRDDJzaDwvywmjMBxbjzpk\"]},\"flashloan-implementation/exchange/IERC20.sol\":{\"keccak256\":\"0x8fcbc62af001bd93a4609b1f3fcd49678330af75110a8f47751b01982281736c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb1c84baba8e2c67579375075c662b931ab121e204e1f6158c200b7bf51e6da8\",\"dweb:/ipfs/QmS29wfEj21umR2nCAp7kRGGfi6zAvnNQE8pav7ADepHBg\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 793,
								"contract": "flashloan-implementation/FlashLoan.sol:FlashloanV1",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 168,
								"contract": "flashloan-implementation/FlashLoan.sol:FlashloanV1",
								"label": "addressesProvider",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ILendingPoolAddressesProviderV1)491"
							},
							{
								"astId": 16,
								"contract": "flashloan-implementation/FlashLoan.sol:FlashloanV1",
								"label": "_reserve",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ILendingPoolAddressesProviderV1)491": {
								"encoding": "inplace",
								"label": "contract ILendingPoolAddressesProviderV1",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": "_addressProvider = address of one of the Lending Pool Providers of Aave using DAI LendingPool address 0x506B0B2CF20FAA8f38a4E2B524EE43e1f4458Cc5  A list of all deployed contract addresses can be found athttps://docs.aave.com/developers/v/1.0/deployed-contracts/deployed-contract-instances",
							"executeOperation(address,uint256,uint256,bytes)": {
								"notice": "This function is called after your contract has received the flash loaned amount"
							},
							"flashloan(address)": {
								"notice": "_asset = address of the asset we want to flash loan Flash loan 1000000000000000000 wei (1 ether) worth of `_asset`"
							}
						},
						"version": 1
					}
				}
			},
			"flashloan-implementation/FlashLoanReceiverBase.sol": {
				"FlashLoanReceiverBaseV1": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressProvider",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LogWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "addressesProvider",
							"outputs": [
								{
									"internalType": "contract ILendingPoolAddressesProviderV1",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw asset.",
								"params": {
									"_assetAddress": "Asset to be withdrawn."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addressesProvider()": "c72c4d10",
							"executeOperation(address,uint256,uint256,bytes)": "ee872558",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProviderV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw asset.\",\"params\":{\"_assetAddress\":\"Asset to be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"flashloan-implementation/FlashLoanReceiverBase.sol\":\"FlashLoanReceiverBaseV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"flashloan-implementation/FlashLoanReceiverBase.sol\":{\"keccak256\":\"0xe9a6111a392657361e8a977feb1e0e6194039dd607286d7587007d96dd8216c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de80d790dbd0b046fa65c6e712a04a14021ef31a4449ad43cba1ac52d2ece7f0\",\"dweb:/ipfs/QmU7Ru4B79C3cJmwiXiF4GZJWG4PASRg6ANiTmMMTYwp2Y\"]},\"flashloan-implementation/IFlashLoanReceiver.sol\":{\"keccak256\":\"0x9857226b61eeb84b5e1bb5c4623c3317ef0eaae623bad0bccb9f578813275118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ea082aafc67ff37260f2a06070cfb1d300a164608508bff1402c56fee6fd61\",\"dweb:/ipfs/QmZACARtc91sydKzr1npeprkjQyVAwHxzZ4v7dPswzrALA\"]},\"flashloan-implementation/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x1608c0d2363569348e27920624a3e1931293bd5e317e6bfa9b5d27e79f82b2fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7fc925ef78b2fdea7480e6b1e5ed8093cd8004ab95b1ca0e2ad6f2bc22a172\",\"dweb:/ipfs/QmS9qLZqg4LUfCLPa1ZjFbvaANjdwegqWQiqujyKdM1hdL\"]},\"flashloan-implementation/Withdrawable.sol\":{\"keccak256\":\"0xbac3564b052027faf37a3caef94c55f89a6898c072b2b1250f083ab717de629a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bf47c10c37b9edec0f18030dadae943f74cdbf4ed42326c3a0b44bd1f7c92f9\",\"dweb:/ipfs/QmTHrqgeUo58hSZ9hq7KSJ8FwCvemP8dpPeQnbrf77m8M2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 793,
								"contract": "flashloan-implementation/FlashLoanReceiverBase.sol:FlashLoanReceiverBaseV1",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 168,
								"contract": "flashloan-implementation/FlashLoanReceiverBase.sol:FlashLoanReceiverBaseV1",
								"label": "addressesProvider",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ILendingPoolAddressesProviderV1)491"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ILendingPoolAddressesProviderV1)491": {
								"encoding": "inplace",
								"label": "contract ILendingPoolAddressesProviderV1",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"flashloan-implementation/IFlashLoanReceiver.sol": {
				"IFlashLoanReceiverV1": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"details": "implement this interface to develop a flashloan-compatible flashLoanReceiver contract*",
						"kind": "dev",
						"methods": {},
						"title": "IFlashLoanReceiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"executeOperation(address,uint256,uint256,bytes)": "ee872558"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"details\":\"implement this interface to develop a flashloan-compatible flashLoanReceiver contract*\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IFlashLoanReceiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Aave fee IFlashLoanReceiver.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flashloan-implementation/IFlashLoanReceiver.sol\":\"IFlashLoanReceiverV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"flashloan-implementation/IFlashLoanReceiver.sol\":{\"keccak256\":\"0x9857226b61eeb84b5e1bb5c4623c3317ef0eaae623bad0bccb9f578813275118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ea082aafc67ff37260f2a06070cfb1d300a164608508bff1402c56fee6fd61\",\"dweb:/ipfs/QmZACARtc91sydKzr1npeprkjQyVAwHxzZ4v7dPswzrALA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for the Aave fee IFlashLoanReceiver.",
						"version": 1
					}
				}
			},
			"flashloan-implementation/ILendingPool.sol": {
				"ILendingPoolV1": {
					"abi": [
						{
							"inputs": [],
							"name": "addressesProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "_referralCode",
									"type": "uint16"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "_referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_params",
									"type": "bytes"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								}
							],
							"name": "getReserveConfigurationData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidationDiscount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "usageAsCollateralEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "borrowingEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "fixedBorrowRateEnabled",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalLiquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableLiquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBorrowsFixed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBorrowsVariable",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fixedBorrowRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "averageFixedBorrowRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "utilizationRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint40",
									"name": "lastUpdateTimestamp",
									"type": "uint40"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalLiquidityETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalCollateralETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBorrowsETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserReserveData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "currentATokenBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentUnderlyingBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentBorrowBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "principalBorrowBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrowRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "originationFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdateTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "usageAsCollateralEnabled",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_collateral",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_purchaseAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "rebalanceFixedBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "redeemUnderlying",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addressesProvider()": "c72c4d10",
							"borrow(address,uint256,uint256,uint16)": "c858f5f9",
							"deposit(address,uint256,uint16)": "d2d0e066",
							"flashLoan(address,address,uint256,bytes)": "5cffe9de",
							"getReserveConfigurationData(address)": "3e150141",
							"getReserveData(address)": "35ea6a75",
							"getReserves()": "0902f1ac",
							"getUserAccountData(address)": "bf92857c",
							"getUserReserveData(address,address)": "28dd2d01",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"rebalanceFixedBorrowRate(address,address)": "66f8cd93",
							"redeemUnderlying(address,address,uint256)": "935642cf",
							"repay(address,uint256,address)": "5ceae9c4",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"swapBorrowRateMode(address)": "48ca1300"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addressesProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_referralCode\",\"type\":\"uint16\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"}],\"name\":\"getReserveConfigurationData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationDiscount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"usageAsCollateralEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowingEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"fixedBorrowRateEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowsFixed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowsVariable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixedBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averageFixedBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalLiquidityETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserReserveData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentATokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentUnderlyingBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBorrowBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalBorrowBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"usageAsCollateralEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_purchaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"rebalanceFixedBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"flashloan-implementation/ILendingPool.sol\":\"ILendingPoolV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"flashloan-implementation/ILendingPool.sol\":{\"keccak256\":\"0x43888d9015041ab10a7e06f13e6cdc04637b624dd6905d58cb205e7087a6c9d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://465e11c527c1ea40212504f8cde1a1122e7c87509b39cdb1037a096f773ff1a0\",\"dweb:/ipfs/QmY4GpdiWtq4qJfQPPbmiwwunPDvaZR55dAKTQyJuW9EFK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"flashloan-implementation/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProviderV1": {
					"abi": [
						{
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolCore",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "ILendingPoolAddressesProvider interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getLendingPool()": "0261bf8b",
							"getLendingPoolCore()": "ed6ff760"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCore\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"ILendingPoolAddressesProvider interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"provides the interface to fetch the LendingPoolCore address\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flashloan-implementation/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProviderV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"flashloan-implementation/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x1608c0d2363569348e27920624a3e1931293bd5e317e6bfa9b5d27e79f82b2fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7fc925ef78b2fdea7480e6b1e5ed8093cd8004ab95b1ca0e2ad6f2bc22a172\",\"dweb:/ipfs/QmS9qLZqg4LUfCLPa1ZjFbvaANjdwegqWQiqujyKdM1hdL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "provides the interface to fetch the LendingPoolCore address",
						"version": 1
					}
				}
			},
			"flashloan-implementation/Withdrawable.sol": {
				"Withdrawable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LogWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw asset.",
								"params": {
									"_assetAddress": "Asset to be withdrawn."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"flashloan-implementation/Withdrawable.sol\":537:1410  contract Withdrawable is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":884:901  address msgSender */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":904:914  _msgSender */\n  shl(0x20, tag_5)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":884:916  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":935:944  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":926:932  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":992:1001  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":988:989  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":850:1009  constructor () internal {... */\n  pop\n    /* \"flashloan-implementation/Withdrawable.sol\":537:1410  contract Withdrawable is Ownable {... */\n  jump(tag_6)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":651:666  address payable */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"flashloan-implementation/Withdrawable.sol\":537:1410  contract Withdrawable is Ownable {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"flashloan-implementation/Withdrawable.sol\":537:1410  contract Withdrawable is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x51cff8d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"flashloan-implementation/Withdrawable.sol\":865:1408  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_6:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"flashloan-implementation/Withdrawable.sol\":865:1408  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_9:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_18\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_19\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"flashloan-implementation/Withdrawable.sol\":933:950  uint assetBalance */\n      0x00\n        /* \"flashloan-implementation/Withdrawable.sol\":640:641  0 */\n      dup1\n        /* \"flashloan-implementation/Withdrawable.sol\":964:986  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan-implementation/Withdrawable.sol\":964:977  _assetAddress */\n      dup3\n        /* \"flashloan-implementation/Withdrawable.sol\":964:986  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"flashloan-implementation/Withdrawable.sol\":960:1335  if (_assetAddress == ETHER) {... */\n      iszero\n      tag_23\n      jumpi\n        /* \"flashloan-implementation/Withdrawable.sol\":1002:1014  address self */\n      0x00\n        /* \"flashloan-implementation/Withdrawable.sol\":1025:1029  this */\n      address\n        /* \"flashloan-implementation/Withdrawable.sol\":1002:1030  address self = address(this) */\n      swap1\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":1101:1105  self */\n      dup1\n        /* \"flashloan-implementation/Withdrawable.sol\":1101:1113  self.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"flashloan-implementation/Withdrawable.sol\":1086:1113  assetBalance = self.balance */\n      swap2\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":1127:1137  msg.sender */\n      caller\n        /* \"flashloan-implementation/Withdrawable.sol\":1127:1146  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan-implementation/Withdrawable.sol\":1127:1160  msg.sender.transfer(assetBalance) */\n      0x08fc\n        /* \"flashloan-implementation/Withdrawable.sol\":1147:1159  assetBalance */\n      dup4\n        /* \"flashloan-implementation/Withdrawable.sol\":1127:1160  msg.sender.transfer(assetBalance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":960:1335  if (_assetAddress == ETHER) {... */\n      pop\n      jump(tag_26)\n    tag_23:\n        /* \"flashloan-implementation/Withdrawable.sol\":1212:1225  _assetAddress */\n      dup2\n        /* \"flashloan-implementation/Withdrawable.sol\":1206:1236  ERC20(_assetAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"flashloan-implementation/Withdrawable.sol\":1245:1249  this */\n      address\n        /* \"flashloan-implementation/Withdrawable.sol\":1206:1251  ERC20(_assetAddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":1191:1251  assetBalance = ERC20(_assetAddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":1265:1324  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      tag_31\n        /* \"flashloan-implementation/Withdrawable.sol\":1299:1309  msg.sender */\n      caller\n        /* \"flashloan-implementation/Withdrawable.sol\":1311:1323  assetBalance */\n      dup3\n        /* \"flashloan-implementation/Withdrawable.sol\":1271:1284  _assetAddress */\n      dup5\n        /* \"flashloan-implementation/Withdrawable.sol\":1265:1298  ERC20(_assetAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_32\n      swap1\n        /* \"flashloan-implementation/Withdrawable.sol\":1265:1324  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_31:\n        /* \"flashloan-implementation/Withdrawable.sol\":960:1335  if (_assetAddress == ETHER) {... */\n    tag_26:\n        /* \"flashloan-implementation/Withdrawable.sol\":1373:1386  _assetAddress */\n      dup2\n        /* \"flashloan-implementation/Withdrawable.sol\":1349:1401  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan-implementation/Withdrawable.sol\":1361:1371  msg.sender */\n      caller\n        /* \"flashloan-implementation/Withdrawable.sol\":1349:1401  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099\n        /* \"flashloan-implementation/Withdrawable.sol\":1388:1400  assetBalance */\n      dup4\n        /* \"flashloan-implementation/Withdrawable.sol\":1349:1401  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1367:1368  _ */\n      pop\n        /* \"flashloan-implementation/Withdrawable.sol\":865:1408  function withdraw(address _assetAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_34\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_19\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_35\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1823:1824  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1807:1813  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1853:1854  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1836:1842  _owner */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1836:1855  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1131:1138  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1157:1163  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1150:1163  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_19\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_41\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2119:2120  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2099:2107  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2091:2164  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2208:2216  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2200:2206  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2236:2244  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2227:2233  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2227:2244  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":806:811  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":836:859  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":861:863  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":865:870  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":786:805  _callOptionalReturn */\n      tag_48\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_51\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3515:3516  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3495:3505  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_52\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_56\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4735:4747  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4792:4797  value */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n      selfbalance\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5022:5033  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_63:\n      0x20\n      dup4\n      lt\n      tag_65\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_63)\n    tag_65:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_68\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_67)\n    tag_68:\n      0x60\n      swap2\n      pop\n    tag_67:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_69\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":786:790  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":989:1001  uint256 size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1098:1105  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1131:1132  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1124:1128  size */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7257:7274  return returndata */\n      swap1\n      pop\n      jump(tag_72)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7395:7396  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7375:7385  returndata */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      iszero\n      tag_75\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_77:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_77)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_80\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_80:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_72:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa2646970667358221220dea383b111d3eb49361c50b5aefff12ed0f193d7ba003162453f22008d1c038664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b610c0e806100db6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806351cff8d914610051578063715018a6146100955780638da5cb5b1461009f578063f2fde38b146100d3575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610117565b005b61009d6103a1565b005b6100a761050e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610115600480360360208110156100e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610537565b005b61011f610729565b73ffffffffffffffffffffffffffffffffffffffff1661013d61050e565b73ffffffffffffffffffffffffffffffffffffffff16146101c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102685760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610261573d6000803e3d6000fd5b5050610338565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156102cf57600080fd5b505afa1580156102e3573d6000803e3d6000fd5b505050506040513d60208110156102f957600080fd5b8101908080519060200190929190505050905061033733828473ffffffffffffffffffffffffffffffffffffffff166107319092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b6103a9610729565b73ffffffffffffffffffffffffffffffffffffffff166103c761050e565b73ffffffffffffffffffffffffffffffffffffffff1614610450576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61053f610729565b73ffffffffffffffffffffffffffffffffffffffff1661055d61050e565b73ffffffffffffffffffffffffffffffffffffffff16146105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561066c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610b636026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6107ce8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107d3565b505050565b6060610835826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108c29092919063ffffffff16565b90506000815111156108bd5780806020019051602081101561085657600080fd5b81019080805190602001909291905050506108bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610baf602a913960400191505060405180910390fd5b5b505050565b60606108d184846000856108da565b90509392505050565b606082471015610935576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610b896026913960400191505060405180910390fd5b61093e85610a83565b6109b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310610a0057805182526020820191506020810190506020830392506109dd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610a62576040519150601f19603f3d011682016040523d82523d6000602084013e610a67565b606091505b5091509150610a77828286610a96565b92505050949350505050565b600080823b905060008111915050919050565b60608315610aa657829050610b5b565b600083511115610ab95782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b20578082015181840152602081019050610b05565b50505050905090810190601f168015610b4d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220dea383b111d3eb49361c50b5aefff12ed0f193d7ba003162453f22008d1c038664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x21 PUSH2 0xC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC0E DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x537 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11F PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x261 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x338 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x337 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x731 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3A9 PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3C7 PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x53F PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x55D PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB63 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7CE DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x7D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x835 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8C2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x8BD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBAF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8D1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB89 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93E DUP6 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xA00 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA62 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA77 DUP3 DUP3 DUP7 PUSH2 0xA96 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xAA6 JUMPI DUP3 SWAP1 POP PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0xAB9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB20 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB05 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB4D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220DEA383B1 GT 0xD3 0xEB 0x49 CALLDATASIZE SHR POP 0xB5 0xAE SELFDESTRUCT CALL 0x2E 0xD0 CALL SWAP4 0xD7 0xBA STOP BALANCE PUSH3 0x453F22 STOP DUP14 SHR SUB DUP7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "537:873:5:-:0;;;;;;;;;;;;;884:17:8;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;537:873:5;;598:104:14;651:15;685:10;678:17;;598:104;:::o;537:873:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806351cff8d914610051578063715018a6146100955780638da5cb5b1461009f578063f2fde38b146100d3575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610117565b005b61009d6103a1565b005b6100a761050e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610115600480360360208110156100e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610537565b005b61011f610729565b73ffffffffffffffffffffffffffffffffffffffff1661013d61050e565b73ffffffffffffffffffffffffffffffffffffffff16146101c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102685760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610261573d6000803e3d6000fd5b5050610338565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156102cf57600080fd5b505afa1580156102e3573d6000803e3d6000fd5b505050506040513d60208110156102f957600080fd5b8101908080519060200190929190505050905061033733828473ffffffffffffffffffffffffffffffffffffffff166107319092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b6103a9610729565b73ffffffffffffffffffffffffffffffffffffffff166103c761050e565b73ffffffffffffffffffffffffffffffffffffffff1614610450576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61053f610729565b73ffffffffffffffffffffffffffffffffffffffff1661055d61050e565b73ffffffffffffffffffffffffffffffffffffffff16146105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561066c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610b636026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6107ce8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107d3565b505050565b6060610835826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108c29092919063ffffffff16565b90506000815111156108bd5780806020019051602081101561085657600080fd5b81019080805190602001909291905050506108bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610baf602a913960400191505060405180910390fd5b5b505050565b60606108d184846000856108da565b90509392505050565b606082471015610935576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610b896026913960400191505060405180910390fd5b61093e85610a83565b6109b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310610a0057805182526020820191506020810190506020830392506109dd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610a62576040519150601f19603f3d011682016040523d82523d6000602084013e610a67565b606091505b5091509150610a77828286610a96565b92505050949350505050565b600080823b905060008111915050919050565b60608315610aa657829050610b5b565b600083511115610ab95782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b20578082015181840152602081019050610b05565b50505050905090810190601f168015610b4d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220dea383b111d3eb49361c50b5aefff12ed0f193d7ba003162453f22008d1c038664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x537 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11F PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x261 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x338 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x337 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x731 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3A9 PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3C7 PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x53F PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x55D PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB63 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7CE DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x7D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x835 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8C2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x8BD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBAF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8D1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB89 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93E DUP6 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xA00 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA62 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA77 DUP3 DUP3 DUP7 PUSH2 0xA96 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xAA6 JUMPI DUP3 SWAP1 POP PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0xAB9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB20 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB05 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB4D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220DEA383B1 GT 0xD3 0xEB 0x49 CALLDATASIZE SHR POP 0xB5 0xAE SELFDESTRUCT CALL 0x2E 0xD0 CALL SWAP4 0xD7 0xBA STOP BALANCE PUSH3 0x453F22 STOP DUP14 SHR SUB DUP7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "537:873:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:543;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1717:145:8;;;:::i;:::-;;1085:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2011:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;865:543:5;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:17:5::1;640:1:::0;964:22:::1;;:13;:22;;;960:375;;;1002:12;1025:4;1002:28;;1101:4;:12;;;1086:27;;1127:10;:19;;:33;1147:12;1127:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;960:375;;;;1212:13;1206:30;;;1245:4;1206:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;1191:60;;1265:59;1299:10;1311:12;1271:13;1265:33;;;;:59;;;;;:::i;:::-;960:375;1373:13;1349:52;;1361:10;1349:52;;;1388:12;1349:52;;;;;;;;;;;;;;;;;;1367:1:8;865:543:5::0;:::o;1717:145:8:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;1085:85::-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;2011:240::-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:14:-;651:15;685:10;678:17;;598:104;:::o;704:175:12:-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:19;:86::i;:::-;704:175;;;:::o;2967:751::-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;3412:27;;;;:69;;;;;:::i;:::-;3386:95;;3515:1;3495:10;:17;:21;3491:221;;;3635:10;3624:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:221;2967:751;;;:::o;3581:193:13:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "617200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "1077",
								"renounceOwnership()": "24329",
								"transferOwnership(address)": "infinite",
								"withdraw(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 537,
									"end": 1410,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 884,
									"end": 901,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 884,
									"end": 916,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 884,
									"end": 916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 935,
									"end": 944,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 932,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 926,
									"end": 944,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 988,
									"end": 989,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 8,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "LOG3",
									"source": 8
								},
								{
									"begin": 850,
									"end": 1009,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 1410,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dea383b111d3eb49361c50b5aefff12ed0f193d7ba003162453f22008d1c038664736f6c634300060c0033",
									".code": [
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "51CFF8D9"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 537,
											"end": 1410,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 933,
											"end": 950,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 964,
											"end": 986,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 964,
											"end": 986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 964,
											"end": 977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 964,
											"end": 986,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 964,
											"end": 986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 964,
											"end": 986,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1029,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1002,
											"end": 1030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1002,
											"end": 1030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1105,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1113,
											"name": "BALANCE",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1113,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1146,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1127,
											"end": 1146,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 1147,
											"end": 1159,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1236,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1236,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1236,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1245,
											"end": 1249,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1298,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1265,
											"end": 1298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1265,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 960,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1371,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099"
										},
										{
											"begin": 1388,
											"end": 1400,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1401,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 865,
											"end": 1408,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2107,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH data",
											"source": 8,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2216,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 786,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 861,
											"end": 863,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 786,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3516,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3505,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH data",
											"source": 12,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4767,
											"end": 4788,
											"name": "SELFBALANCE",
											"source": 13
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH data",
											"source": 13,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "CODECOPY",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7385,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw asset.\",\"params\":{\"_assetAddress\":\"Asset to be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Ensures that any contract that inherits from this contract is able to withdraw funds that are accidentally received or stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flashloan-implementation/Withdrawable.sol\":\"Withdrawable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"flashloan-implementation/Withdrawable.sol\":{\"keccak256\":\"0xbac3564b052027faf37a3caef94c55f89a6898c072b2b1250f083ab717de629a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bf47c10c37b9edec0f18030dadae943f74cdbf4ed42326c3a0b44bd1f7c92f9\",\"dweb:/ipfs/QmTHrqgeUo58hSZ9hq7KSJ8FwCvemP8dpPeQnbrf77m8M2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 793,
								"contract": "flashloan-implementation/Withdrawable.sol:Withdrawable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Ensures that any contract that inherits from this contract is able to withdraw funds that are accidentally received or stuck.",
						"version": 1
					}
				}
			},
			"flashloan-implementation/exchange/Exchange.sol": {
				"Exchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token2",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ownerOfToken1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ownerOfToken2",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOfToken1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOfToken2",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"flashloan-implementation/exchange/Exchange.sol\":90:1600  contract Exchange {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"flashloan-implementation/exchange/Exchange.sol\":90:1600  contract Exchange {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa64e3dd7\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1067:1598  function swap... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_6\n      jump\t// in\n    tag_4:\n      stop\n    tag_6:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1302:1308  token1 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1318:1324  token2 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1334:1347  ownerOfToken1 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1357:1370  ownerOfToken2 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1380:1394  amountOfToken1 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1404:1418  amountOfToken2 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":428:442  amountOfToken1 */\n      dup2\n        /* \"flashloan-implementation/exchange/Exchange.sol\":377:383  token1 */\n      dup7\n        /* \"flashloan-implementation/exchange/Exchange.sol\":360:394  IBasicERC20Token(token1).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"flashloan-implementation/exchange/Exchange.sol\":395:408  ownerOfToken1 */\n      dup7\n        /* \"flashloan-implementation/exchange/Exchange.sol\":418:422  this */\n      address\n        /* \"flashloan-implementation/exchange/Exchange.sol\":360:424  IBasicERC20Token(token1).allowance(ownerOfToken1, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_10\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_10:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/exchange/Exchange.sol\":360:442  IBasicERC20Token(token1).allowance(ownerOfToken1, address(this)) >= amountOfToken1 */\n      lt\n      iszero\n        /* \"flashloan-implementation/exchange/Exchange.sol\":330:531  require... */\n      tag_12\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_eb963c2896a2206169f545030cec46d24f6bea9389c472acb8e0f48da8322999\n      0x3f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_12:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":639:653  amountOfToken2 */\n      dup1\n        /* \"flashloan-implementation/exchange/Exchange.sol\":588:594  token2 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":571:605  IBasicERC20Token(token2).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"flashloan-implementation/exchange/Exchange.sol\":606:619  ownerOfToken2 */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":629:633  this */\n      address\n        /* \"flashloan-implementation/exchange/Exchange.sol\":571:635  IBasicERC20Token(token2).allowance(ownerOfToken2, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_15:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/exchange/Exchange.sol\":571:653  IBasicERC20Token(token2).allowance(ownerOfToken2, address(this)) >= amountOfToken2 */\n      lt\n      iszero\n        /* \"flashloan-implementation/exchange/Exchange.sol\":541:742  require... */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_03555d648df7e6b723014309a5935ca50a462f434066140d1d586da12a6bd4bc\n      0x3f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1439:1510  _safeTransferFrom(token1, ownerOfToken1, ownerOfToken2, amountOfToken1) */\n      tag_19\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1457:1463  token1 */\n      dup13\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1465:1478  ownerOfToken1 */\n      dup12\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1480:1493  ownerOfToken2 */\n      dup12\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1495:1509  amountOfToken1 */\n      dup12\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1439:1456  _safeTransferFrom */\n      tag_20\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1439:1510  _safeTransferFrom(token1, ownerOfToken1, ownerOfToken2, amountOfToken1) */\n      jump\t// in\n    tag_19:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1520:1591  _safeTransferFrom(token2, ownerOfToken2, ownerOfToken1, amountOfToken2) */\n      tag_21\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1538:1544  token2 */\n      dup12\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1546:1559  ownerOfToken2 */\n      dup11\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1561:1574  ownerOfToken1 */\n      dup13\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1576:1590  amountOfToken2 */\n      dup11\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1520:1537  _safeTransferFrom */\n      tag_20\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1520:1591  _safeTransferFrom(token2, ownerOfToken2, ownerOfToken1, amountOfToken2) */\n      jump\t// in\n    tag_21:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1067:1598  function swap... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"flashloan-implementation/exchange/Exchange.sol\":766:1061  function _safeTransferFrom... */\n    tag_20:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":924:933  bool sent */\n      0x00\n        /* \"flashloan-implementation/exchange/Exchange.sol\":953:965  tokenAddress */\n      dup5\n        /* \"flashloan-implementation/exchange/Exchange.sol\":936:979  IBasicERC20Token(tokenAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"flashloan-implementation/exchange/Exchange.sol\":980:986  sender */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":988:997  recipient */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":999:1005  amount */\n      dup6\n        /* \"flashloan-implementation/exchange/Exchange.sol\":936:1006  IBasicERC20Token(tokenAddress).transferFrom(sender, recipient, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan-implementation/exchange/Exchange.sol\":924:1006  bool sent = IBasicERC20Token(tokenAddress).transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1024:1028  sent */\n      dup1\n        /* \"flashloan-implementation/exchange/Exchange.sol\":1016:1054  require(sent, \"Token transfer failed\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"flashloan-implementation/exchange/Exchange.sol\":766:1061  function _safeTransferFrom... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_03555d648df7e6b723014309a5935ca50a462f434066140d1d586da12a6bd4bc 5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2032\n    data_eb963c2896a2206169f545030cec46d24f6bea9389c472acb8e0f48da8322999 5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2031\n\n    auxdata: 0xa26469706673582212208d3fb768cfcdb48f6c81da2d78f17d052b1cc4333fd25440e0efea6b82acfec364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610540806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a64e3dd714610030575b600080fd5b6100e6600480360360c081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506100e8565b005b858585858585818673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e86306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561017457600080fd5b505afa158015610188573d6000803e3d6000fd5b505050506040513d602081101561019e57600080fd5b81019080805190602001909291905050501015610206576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f8152602001806104cc603f913960400191505060405180910390fd5b808573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561028c57600080fd5b505afa1580156102a0573d6000803e3d6000fd5b505050506040513d60208110156102b657600080fd5b8101908080519060200190929190505050101561031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f81526020018061048d603f913960400191505060405180910390fd5b61032a8c8b8b8b610344565b6103368b8a8c8a610344565b505050505050505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103d557600080fd5b505af11580156103e9573d6000803e3d6000fd5b505050506040513d60208110156103ff57600080fd5b8101908080519060200190929190505050905080610485576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b505050505056fe5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e20325468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2031a26469706673582212208d3fb768cfcdb48f6c81da2d78f17d052b1cc4333fd25440e0efea6b82acfec364736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA64E3DD7 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE8 JUMP JUMPDEST STOP JUMPDEST DUP6 DUP6 DUP6 DUP6 DUP6 DUP6 DUP2 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP7 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x188 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4CC PUSH1 0x3F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP6 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x48D PUSH1 0x3F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32A DUP13 DUP12 DUP12 DUP12 PUSH2 0x344 JUMP JUMPDEST PUSH2 0x336 DUP12 DUP11 DUP13 DUP11 PUSH2 0x344 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID SLOAD PUSH9 0x697320636F6E747261 PUSH4 0x74206973 KECCAK256 PUSH15 0x6F7420617070726F76656420746F20 PUSH20 0x70656E64207468697320616D6F756E742066726F PUSH14 0x20746F6B656E2032546869732063 PUSH16 0x6E7472616374206973206E6F74206170 PUSH17 0x726F76656420746F207370656E64207468 PUSH10 0x7320616D6F756E742066 PUSH19 0x6F6D20746F6B656E2031A26469706673582212 KECCAK256 DUP14 EXTCODEHASH 0xB7 PUSH9 0xCFCDB48F6C81DA2D78 CALL PUSH30 0x52B1CC4333FD25440E0EFEA6B82ACFEC364736F6C634300060C00330000 ",
							"sourceMap": "90:1510:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a64e3dd714610030575b600080fd5b6100e6600480360360c081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506100e8565b005b858585858585818673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e86306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561017457600080fd5b505afa158015610188573d6000803e3d6000fd5b505050506040513d602081101561019e57600080fd5b81019080805190602001909291905050501015610206576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f8152602001806104cc603f913960400191505060405180910390fd5b808573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561028c57600080fd5b505afa1580156102a0573d6000803e3d6000fd5b505050506040513d60208110156102b657600080fd5b8101908080519060200190929190505050101561031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f81526020018061048d603f913960400191505060405180910390fd5b61032a8c8b8b8b610344565b6103368b8a8c8a610344565b505050505050505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103d557600080fd5b505af11580156103e9573d6000803e3d6000fd5b505050506040513d60208110156103ff57600080fd5b8101908080519060200190929190505050905080610485576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b505050505056fe5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e20325468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2031a26469706673582212208d3fb768cfcdb48f6c81da2d78f17d052b1cc4333fd25440e0efea6b82acfec364736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA64E3DD7 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE8 JUMP JUMPDEST STOP JUMPDEST DUP6 DUP6 DUP6 DUP6 DUP6 DUP6 DUP2 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP7 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x188 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4CC PUSH1 0x3F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP6 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x48D PUSH1 0x3F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32A DUP13 DUP12 DUP12 DUP12 PUSH2 0x344 JUMP JUMPDEST PUSH2 0x336 DUP12 DUP11 DUP13 DUP11 PUSH2 0x344 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID SLOAD PUSH9 0x697320636F6E747261 PUSH4 0x74206973 KECCAK256 PUSH15 0x6F7420617070726F76656420746F20 PUSH20 0x70656E64207468697320616D6F756E742066726F PUSH14 0x20746F6B656E2032546869732063 PUSH16 0x6E7472616374206973206E6F74206170 PUSH17 0x726F76656420746F207370656E64207468 PUSH10 0x7320616D6F756E742066 PUSH19 0x6F6D20746F6B656E2031A26469706673582212 KECCAK256 DUP14 EXTCODEHASH 0xB7 PUSH9 0xCFCDB48F6C81DA2D78 CALL PUSH30 0x52B1CC4333FD25440E0EFEA6B82ACFEC364736F6C634300060C00330000 ",
							"sourceMap": "90:1510:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1067:531;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1302:6;1318;1334:13;1357;1380:14;1404;428;377:6;360:34;;;395:13;418:4;360:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:82;;330:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:14;588:6;571:34;;;606:13;629:4;571:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:82;;541:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1439:71:::1;1457:6;1465:13;1480;1495:14;1439:17;:71::i;:::-;1520;1538:6;1546:13;1561;1576:14;1520:17;:71::i;:::-;1067:531:::0;;;;;;;;;;;;:::o;766:295::-;924:9;953:12;936:43;;;980:6;988:9;999:6;936:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;924:82;;1024:4;1016:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;766:295;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "268800",
								"executionCost": "306",
								"totalCost": "269106"
							},
							"external": {
								"swap(address,address,address,address,uint256,uint256)": "infinite"
							},
							"internal": {
								"_safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 90,
									"end": 1600,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 1600,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d3fb768cfcdb48f6c81da2d78f17d052b1cc4333fd25440e0efea6b82acfec364736f6c634300060c0033",
									".code": [
										{
											"begin": 90,
											"end": 1600,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "PUSH",
											"source": 6,
											"value": "A64E3DD7"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 90,
											"end": 1600,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1357,
											"end": 1370,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1394,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1418,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 428,
											"end": 442,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 377,
											"end": 383,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 360,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 360,
											"end": 394,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 360,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 395,
											"end": 408,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 418,
											"end": 422,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 442,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 360,
											"end": 442,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH data",
											"source": 6,
											"value": "EB963C2896A2206169F545030CEC46D24F6BEA9389C472ACB8E0F48DA8322999"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 531,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 330,
											"end": 531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 639,
											"end": 653,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 594,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 606,
											"end": 619,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 629,
											"end": 633,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 653,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 653,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH data",
											"source": 6,
											"value": "3555D648DF7E6B723014309A5935CA50A462F434066140D1D586DA12A6BD4BC"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 541,
											"end": 742,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 541,
											"end": 742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1457,
											"end": 1463,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1493,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1510,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1439,
											"end": 1510,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1439,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1538,
											"end": 1544,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1574,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1590,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1591,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1520,
											"end": 1591,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1520,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1598,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 965,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 988,
											"end": 997,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1005,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1024,
											"end": 1028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1016,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 766,
											"end": 1061,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									],
									".data": {
										"3555D648DF7E6B723014309A5935CA50A462F434066140D1D586DA12A6BD4BC": "5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2032",
										"EB963C2896A2206169F545030CEC46D24F6BEA9389C472ACB8E0F48DA8322999": "5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2031"
									}
								}
							}
						},
						"methodIdentifiers": {
							"swap(address,address,address,address,uint256,uint256)": "a64e3dd7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerOfToken1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerOfToken2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOfToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOfToken2\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"flashloan-implementation/exchange/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"flashloan-implementation/exchange/Exchange.sol\":{\"keccak256\":\"0xc61bd44104367c24cb14daa6bac30ea058d591ae6bc05cb040eabc4fcefe11fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd46bd1cd655dc3692ecb9f551a19189bfc7e76ad94a76b9a188e72cfd871f74\",\"dweb:/ipfs/QmWtoEmcJZKmgqmwEzBFXmkTMRDDJzaDwvywmjMBxbjzpk\"]},\"flashloan-implementation/exchange/IERC20.sol\":{\"keccak256\":\"0x8fcbc62af001bd93a4609b1f3fcd49678330af75110a8f47751b01982281736c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb1c84baba8e2c67579375075c662b931ab121e204e1f6158c200b7bf51e6da8\",\"dweb:/ipfs/QmS29wfEj21umR2nCAp7kRGGfi6zAvnNQE8pav7ADepHBg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"flashloan-implementation/exchange/IERC20.sol": {
				"IBasicERC20Token": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"flashloan-implementation/exchange/IERC20.sol\":\"IBasicERC20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"flashloan-implementation/exchange/IERC20.sol\":{\"keccak256\":\"0x8fcbc62af001bd93a4609b1f3fcd49678330af75110a8f47751b01982281736c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb1c84baba8e2c67579375075c662b931ab121e204e1f6158c200b7bf51e6da8\",\"dweb:/ipfs/QmS29wfEj21umR2nCAp7kRGGfi6zAvnNQE8pav7ADepHBg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 793,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208a9078219a578b0a05575340c8ef5595425e45481bda8ed88f0f8bafee95488664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a9078219a578b0a05575340c8ef5595425e45481bda8ed88f0f8bafee95488664736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 SWAP1 PUSH25 0x219A578B0A05575340C8EF5595425E45481BDA8ED88F0F8BAF 0xEE SWAP6 0x48 DUP7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6594:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a9078219a578b0a05575340c8ef5595425e45481bda8ed88f0f8bafee95488664736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 SWAP1 PUSH25 0x219A578B0A05575340C8EF5595425E45481BDA8ED88F0F8BAF 0xEE SWAP6 0x48 DUP7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6594:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a9078219a578b0a05575340c8ef5595425e45481bda8ed88f0f8bafee95488664736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_58\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4392:4403  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5088:5094  sender */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5176:5187  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5751:5758  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5693:5701  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5793:5797  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5786:5797  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3499:3508  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3509:3516  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3492:3517  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6458:6465  spender */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6400:6408  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6546:6550  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6539:6550  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3888:3892  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3881:3892  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4084:4089  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4091:4098  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":4065:4099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9473:9474  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9456:9461  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9553:9554  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9534:9541  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9635:9641  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9617:9622  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9624:9631  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9672:9679  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9665:9670  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9681:9687  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7154:7155  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7136:7142  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7237:7238  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7216:7225  recipient */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_99\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7378:7384  sender */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7358:7364  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7472:7481  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7482:7491  recipient */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7459:7468  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7536:7545  recipient */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7528:7534  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7547:7553  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122098d9ae2a4334369ea3dcae20bd1f364a581b9952156ac5360e96c656d52a065364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200139f3803806200139f833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b5b80821115620002ad57600081600090555060010162000293565b5090565b6110de80620002c16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122098d9ae2a4334369ea3dcae20bd1f364a581b9952156ac5360e96c656d52a065364736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x139F CODESIZE SUB DUP1 PUSH3 0x139F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2B1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x293 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10DE DUP1 PUSH3 0x2C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122098D9 0xAE 0x2A NUMBER CALLVALUE CALLDATASIZE SWAP15 LOG3 0xDC 0xAE KECCAK256 0xBD 0x1F CALLDATASIZE 0x4A PC SHL SWAP10 MSTORE ISZERO PUSH11 0xC5360E96C656D52A065364 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "1321:9474:10:-:0;;;1958:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;1321:9474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122098d9ae2a4334369ea3dcae20bd1f364a581b9952156ac5360e96c656d52a065364736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122098D9 0xAE 0x2A NUMBER CALLVALUE CALLDATASIZE SWAP15 LOG3 0xDC 0xAE KECCAK256 0xBD 0x1F CALLDATASIZE 0x4A PC SHL SWAP10 MSTORE ISZERO PUSH11 0xC5360E96C656D52A065364 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "1321:9474:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3086:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5589:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3399:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2370:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3727:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3957:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2168:89;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;3086:89::-;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;3399:125::-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;2370:93::-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;3957:149::-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;598:104:14:-;651:15;685:10;678:17;;598:104;:::o;9355:340:10:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:9:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;10701:92:10:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "863600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1144",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098d9ae2a4334369ea3dcae20bd1f364a581b9952156ac5360e96c656d52a065364736f6c634300060c0033",
									".code": [
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 10,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5693,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 10,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4098,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 9461,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 10,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 10,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9631,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9665,
											"end": 9670,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 10,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 10,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 10,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 10,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 10,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1267,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1273,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1275,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1277,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1279,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1281,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c54bf0d0efdee67c50c684195e567c2a2518a2b5716dab2c19c47c4a133b49a664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c54bf0d0efdee67c50c684195e567c2a2518a2b5716dab2c19c47c4a133b49a664736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0x4B CREATE 0xD0 0xEF 0xDE 0xE6 PUSH29 0x50C684195E567C2A2518A2B5716DAB2C19C47C4A133B49A664736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "616:3104:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c54bf0d0efdee67c50c684195e567c2a2518a2b5716dab2c19c47c4a133b49a664736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0x4B CREATE 0xD0 0xEF 0xDE 0xE6 PUSH29 0x50C684195E567C2A2518A2B5716DAB2C19C47C4A133B49A664736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "616:3104:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "INVALID",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c54bf0d0efdee67c50c684195e567c2a2518a2b5716dab2c19c47c4a133b49a664736f6c634300060c0033",
									".code": [
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201a187836e941badf5371ef431e09fcabe0a2cd3698170d1f20b0c27814a828c364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201a187836e941badf5371ef431e09fcabe0a2cd3698170d1f20b0c27814a828c364736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE XOR PUSH25 0x36E941BADF5371EF431E09FCABE0A2CD3698170D1F20B0C278 EQ 0xA8 0x28 0xC3 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "134:7684:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201a187836e941badf5371ef431e09fcabe0a2cd3698170d1f20b0c27814a828c364736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE XOR PUSH25 0x36E941BADF5371EF431E09FCABE0A2CD3698170D1F20B0C278 EQ 0xA8 0x28 0xC3 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "134:7684:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a187836e941badf5371ef431e09fcabe0a2cd3698170d1f20b0c27814a828c364736f6c634300060c0033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "flashloan-implementation/FlashLoan.sol:38:9: Warning: This declaration shadows an existing declaration.\n        address _reserve,\n        ^--------------^\nflashloan-implementation/FlashLoan.sol:10:5: The shadowed declaration is here:\n    address _reserve = address(this);\n    ^------------------------------^\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 330,
						"file": "flashloan-implementation/FlashLoan.sol",
						"message": "The shadowed declaration is here:",
						"start": 298
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1347,
					"file": "flashloan-implementation/FlashLoan.sol",
					"start": 1331
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "flashloan-implementation/FlashLoan.sol:41:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        bytes calldata _params\n        ^--------------------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1426,
					"file": "flashloan-implementation/FlashLoan.sol",
					"start": 1404
				},
				"type": "Warning"
			}
		],
		"sources": {
			"flashloan-implementation/FlashLoan.sol": {
				"ast": {
					"absolutePath": "flashloan-implementation/FlashLoan.sol",
					"exportedSymbols": {
						"FlashloanV1": [
							145
						]
					},
					"id": 146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:0"
						},
						{
							"absolutePath": "flashloan-implementation/FlashLoanReceiverBase.sol",
							"file": "./FlashLoanReceiverBase.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 146,
							"sourceUnit": 271,
							"src": "54:37:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "flashloan-implementation/ILendingPoolAddressesProvider.sol",
							"file": "./ILendingPoolAddressesProvider.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 146,
							"sourceUnit": 492,
							"src": "92:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "flashloan-implementation/ILendingPool.sol",
							"file": "./ILendingPool.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 146,
							"sourceUnit": 478,
							"src": "138:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "flashloan-implementation/exchange/Exchange.sol",
							"file": "./exchange/Exchange.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 146,
							"sourceUnit": 702,
							"src": "167:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "flashloan-implementation/exchange/IERC20.sol",
							"file": "./exchange/IERC20.sol",
							"id": 6,
							"nodeType": "ImportDirective",
							"scope": 146,
							"sourceUnit": 786,
							"src": "201:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 7,
										"name": "FlashLoanReceiverBaseV1",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 270,
										"src": "258:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_FlashLoanReceiverBaseV1_$270",
											"typeString": "contract FlashLoanReceiverBaseV1"
										}
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "258:23:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 9,
										"name": "Exchange",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 701,
										"src": "283:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Exchange_$701",
											"typeString": "contract Exchange"
										}
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "283:8:0"
								}
							],
							"contractDependencies": [
								270,
								285,
								583,
								701,
								895,
								2363
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 145,
							"linearizedBaseContracts": [
								145,
								701,
								270,
								583,
								895,
								2363,
								285
							],
							"name": "FlashloanV1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "_reserve",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 145,
									"src": "298:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "298:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 14,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": -28,
												"src": "325:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_FlashloanV1_$145",
													"typeString": "contract FlashloanV1"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_FlashloanV1_$145",
													"typeString": "contract FlashloanV1"
												}
											],
											"id": 13,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "317:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "317:7:0",
												"typeDescriptions": {
													"typeIdentifier": null,
													"typeString": null
												}
											}
										},
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "317:13:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "756:2:0",
										"statements": []
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "336:328:0",
										"text": "_addressProvider = address of one of the Lending Pool Providers of Aave\nusing DAI LendingPool address 0x506B0B2CF20FAA8f38a4E2B524EE43e1f4458Cc5 \nA list of all deployed contract addresses can be found athttps://docs.aave.com/developers/v/1.0/deployed-contracts/deployed-contract-instances"
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 22,
													"name": "_addressProvider",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "732:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 23,
											"modifierName": {
												"argumentTypes": null,
												"id": 21,
												"name": "FlashLoanReceiverBaseV1",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 270,
												"src": "708:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_FlashLoanReceiverBaseV1_$270_$",
													"typeString": "type(contract FlashLoanReceiverBaseV1)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "708:41:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "_addressProvider",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "682:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "681:26:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:0:0"
									},
									"scope": 145,
									"src": "670:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "963:228:0",
										"statements": [
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 62,
														"src": "973:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 34,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 37,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "",
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "993:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "973:22:0"
											},
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 62,
														"src": "1005:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 38,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1005:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1019:7:0",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1005:21:0"
											},
											{
												"assignments": [
													43
												],
												"declarations": [
													{
														"constant": false,
														"id": 43,
														"mutability": "mutable",
														"name": "lendingPool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 62,
														"src": "1037:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolV1_$477",
															"typeString": "contract ILendingPoolV1"
														},
														"typeName": {
															"contractScope": null,
															"id": 42,
															"name": "ILendingPoolV1",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 477,
															"src": "1037:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolV1_$477",
																"typeString": "contract ILendingPoolV1"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 45,
																	"name": "addressesProvider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "1081:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILendingPoolAddressesProviderV1_$491",
																		"typeString": "contract ILendingPoolAddressesProviderV1"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getLendingPool",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 490,
																"src": "1081:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1081:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 44,
														"name": "ILendingPoolV1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "1066:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ILendingPoolV1_$477_$",
															"typeString": "type(contract ILendingPoolV1)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolV1_$477",
														"typeString": "contract ILendingPoolV1"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1037:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 55,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1156:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FlashloanV1_$145",
																		"typeString": "contract FlashloanV1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FlashloanV1_$145",
																		"typeString": "contract FlashloanV1"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1148:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1148:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1148:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 57,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1163:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 58,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "1171:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 59,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "1179:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 50,
															"name": "lendingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "1126:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolV1_$477",
																"typeString": "contract ILendingPoolV1"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flashLoan",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 373,
														"src": "1126:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory) external"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "1126:58:0"
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "764:142:0",
										"text": "_asset = address of the asset we want to flash loan\nFlash loan 1000000000000000000 wei (1 ether) worth of `_asset`"
									},
									"functionSelector": "36c40477",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 32,
											"modifierName": {
												"argumentTypes": null,
												"id": 31,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 844,
												"src": "953:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "953:9:0"
										}
									],
									"name": "flashloan",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "_asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "930:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "929:16:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "963:0:0"
									},
									"scope": 145,
									"src": "911:280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										284
									],
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "1471:1158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 77,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "1489:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 81,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "1527:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FlashloanV1_$145",
																					"typeString": "contract FlashloanV1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FlashloanV1_$145",
																					"typeString": "contract FlashloanV1"
																				}
																			],
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1519:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 79,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1519:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 82,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1519:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 83,
																		"name": "_reserve",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 66,
																		"src": "1534:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 78,
																	"name": "getBalanceInternal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "1500:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1500:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1489:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c69642062616c616e63652c207761732074686520666c6173684c6f616e207375636365737366756c3f",
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1545:48:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8fe07d1a7bc8ed40574aa57beae4fbd43367cc89459755c316997d76d102b27d",
																"typeString": "literal_string \"Invalid balance, was the flashLoan successful?\""
															},
															"value": "Invalid balance, was the flashLoan successful?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8fe07d1a7bc8ed40574aa57beae4fbd43367cc89459755c316997d76d102b27d",
																"typeString": "literal_string \"Invalid balance, was the flashLoan successful?\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1481:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1481:113:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1481:113:0"
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "token1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 143,
														"src": "1757:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1757:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307846663739353537376439414338624437443930456532326236433137303334393062363531324644",
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1774:42:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"value": "0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1757:59:0"
											},
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "token2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 143,
														"src": "1826:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 93,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 96,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307831333531323937394144453236374142353130303837384532653066343835423536383332386134",
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1843:42:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"value": "0x13512979ADE267AB5100878E2e0f485B568328a4"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1826:59:0"
											},
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "ownerOfToken1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 143,
														"src": "1895:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1895:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307832383533654231643831333432343533633666413746463744303343393761384631343245616241",
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1919:42:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"value": "0x2853eB1d81342453c6fA7FF7D03C97a8F142EabA"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1895:66:0"
											},
											{
												"assignments": [
													102
												],
												"declarations": [
													{
														"constant": false,
														"id": 102,
														"mutability": "mutable",
														"name": "ownerOfToken2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 143,
														"src": "2021:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 101,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2021:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 104,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307833636545453343463637333134353031456339363041433831453765354135386239394462623761",
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2045:42:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"value": "0x3ceEE3CF67314501Ec960AC81E7e5A58b99Dbb7a"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2021:66:0"
											},
											{
												"assignments": [
													106
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "amountOfToken1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 143,
														"src": "2097:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 105,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2097:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 108,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2119:7:0",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2097:29:0"
											},
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "amountOfToken2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 143,
														"src": "2136:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 109,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2136:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2158:7:0",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2136:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 114,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2194:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 115,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2214:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 116,
															"name": "ownerOfToken1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2234:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 117,
															"name": "ownerOfToken2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2261:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 118,
															"name": "amountOfToken1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2288:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 119,
															"name": "amountOfToken2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2316:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 113,
														"name": "swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "2176:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,address,uint256,uint256)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:164:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "2176:164:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 123,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2369:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 124,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2389:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 125,
															"name": "ownerOfToken2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2409:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 126,
															"name": "ownerOfToken1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2436:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 127,
															"name": "amountOfToken2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2463:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 128,
															"name": "amountOfToken1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2491:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 122,
														"name": "swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "2351:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,address,uint256,uint256)"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2351:164:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "2351:164:0"
											},
											{
												"assignments": [
													132
												],
												"declarations": [
													{
														"constant": false,
														"id": 132,
														"mutability": "mutable",
														"name": "totalDebt",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 143,
														"src": "2526:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 131,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 135,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "2555:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 133,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1077,
														"src": "2543:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2543:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2526:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 139,
															"name": "_reserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "2602:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 140,
															"name": "totalDebt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "2612:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 138,
														"name": "transferFundsBackToPoolInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2570:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2570:52:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1197:94:0",
										"text": "This function is called after your contract has received the flash loaned amount"
									},
									"functionSelector": "ee872558",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeOperation",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1458:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 144,
												"src": "1331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 144,
												"src": "1357:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 144,
												"src": "1382:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_params",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 144,
												"src": "1404:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1404:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1321:111:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1471:0:0"
									},
									"scope": 145,
									"src": "1296:1333:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 146,
							"src": "234:2398:0"
						}
					],
					"src": "30:2602:0"
				},
				"id": 0
			},
			"flashloan-implementation/FlashLoanReceiverBase.sol": {
				"ast": {
					"absolutePath": "flashloan-implementation/FlashLoanReceiverBase.sol",
					"exportedSymbols": {
						"FlashLoanReceiverBaseV1": [
							270
						]
					},
					"id": 271,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 147,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol",
							"id": 148,
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 1251,
							"src": "55:107:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol",
							"id": 149,
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 1832,
							"src": "163:112:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol",
							"id": 150,
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 2045,
							"src": "276:115:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "flashloan-implementation/IFlashLoanReceiver.sol",
							"file": "./IFlashLoanReceiver.sol",
							"id": 151,
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 286,
							"src": "392:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "flashloan-implementation/ILendingPoolAddressesProvider.sol",
							"file": "./ILendingPoolAddressesProvider.sol",
							"id": 152,
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 492,
							"src": "427:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "flashloan-implementation/Withdrawable.sol",
							"file": "./Withdrawable.sol",
							"id": 153,
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 584,
							"src": "473:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 154,
										"name": "IFlashLoanReceiverV1",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 285,
										"src": "548:20:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFlashLoanReceiverV1_$285",
											"typeString": "contract IFlashLoanReceiverV1"
										}
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "548:20:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 156,
										"name": "Withdrawable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 583,
										"src": "570:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Withdrawable_$583",
											"typeString": "contract Withdrawable"
										}
									},
									"id": 157,
									"nodeType": "InheritanceSpecifier",
									"src": "570:12:1"
								}
							],
							"contractDependencies": [
								285,
								583,
								895,
								2363
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 270,
							"linearizedBaseContracts": [
								270,
								583,
								895,
								2363,
								285
							],
							"name": "FlashLoanReceiverBaseV1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 160,
									"libraryName": {
										"contractScope": null,
										"id": 158,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2044,
										"src": "596:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$2044",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "590:27:1",
									"typeName": {
										"contractScope": null,
										"id": 159,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1831,
										"src": "610:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1831",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 163,
									"libraryName": {
										"contractScope": null,
										"id": 161,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1250,
										"src": "628:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1250",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "622:27:1",
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "641:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 166,
									"mutability": "constant",
									"name": "ethAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 270,
									"src": "655:72:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 164,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "655:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
										"id": 165,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "685:42:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c72c4d10",
									"id": 168,
									"mutability": "mutable",
									"name": "addressesProvider",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 270,
									"src": "733:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILendingPoolAddressesProviderV1_$491",
										"typeString": "contract ILendingPoolAddressesProviderV1"
									},
									"typeName": {
										"contractScope": null,
										"id": 167,
										"name": "ILendingPoolAddressesProviderV1",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 491,
										"src": "733:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILendingPoolAddressesProviderV1_$491",
											"typeString": "contract ILendingPoolAddressesProviderV1"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "841:86:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 173,
														"name": "addressesProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "851:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolAddressesProviderV1_$491",
															"typeString": "contract ILendingPoolAddressesProviderV1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 175,
																"name": "_addressProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "903:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 174,
															"name": "ILendingPoolAddressesProviderV1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "871:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProviderV1_$491_$",
																"typeString": "type(contract ILendingPoolAddressesProviderV1)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "871:49:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolAddressesProviderV1_$491",
															"typeString": "contract ILendingPoolAddressesProviderV1"
														}
													},
													"src": "851:69:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProviderV1_$491",
														"typeString": "contract ILendingPoolAddressesProviderV1"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "851:69:1"
											}
										]
									},
									"documentation": null,
									"id": 180,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "_addressProvider",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 180,
												"src": "808:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "807:26:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:0:1"
									},
									"scope": 270,
									"src": "796:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "960:2:1",
										"statements": []
									},
									"documentation": null,
									"id": 184,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:2:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:0:1"
									},
									"scope": 270,
									"src": "933:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1053:129:1",
										"statements": [
											{
												"assignments": [
													192
												],
												"declarations": [
													{
														"constant": false,
														"id": 192,
														"mutability": "mutable",
														"name": "core",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 203,
														"src": "1063:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 191,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1063:15:1",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 196,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 193,
															"name": "addressesProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "1086:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolAddressesProviderV1_$491",
																"typeString": "contract ILendingPoolAddressesProviderV1"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getLendingPoolCore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 485,
														"src": "1086:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
															"typeString": "function () view external returns (address payable)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1063:61:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 198,
															"name": "core",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1151:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 199,
															"name": "_reserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "1157:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 200,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "1167:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 197,
														"name": "transferInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "1134:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,address,uint256)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "1134:41:1"
											}
										]
									},
									"documentation": null,
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFundsBackToPoolInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 204,
												"src": "1009:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 204,
												"src": "1027:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1008:35:1"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:0:1"
									},
									"scope": 270,
									"src": "968:214:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "1288:269:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 213,
														"name": "_reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1301:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 214,
														"name": "ethAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "1313:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1301:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 234,
												"nodeType": "IfStatement",
												"src": "1298:191:1",
												"trueBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "1325:164:1",
													"statements": [
														{
															"assignments": [
																217,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 217,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 233,
																	"src": "1340:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 216,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1340:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null
															],
															"id": 224,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "",
																		"id": 222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1392:2:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 218,
																			"name": "_destination",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 206,
																			"src": "1358:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1358:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"argumentTypes": null,
																			"id": 220,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 210,
																			"src": "1383:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "1358:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1358:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1339:56:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 226,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 217,
																			"src": "1417:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "74727565",
																			"id": 227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1428:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "1417:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "436f756c646e2774207472616e7366657220455448",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1434:23:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_703745dd3f263086403a3879fc59cdcd2946bf38cbc33a0a9aa7e2f594840633",
																			"typeString": "literal_string \"Couldn't transfer ETH\""
																		},
																		"value": "Couldn't transfer ETH"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_703745dd3f263086403a3879fc59cdcd2946bf38cbc33a0a9aa7e2f594840633",
																			"typeString": "literal_string \"Couldn't transfer ETH\""
																		}
																	],
																	"id": 225,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "1409:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1409:49:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 231,
															"nodeType": "ExpressionStatement",
															"src": "1409:49:1"
														},
														{
															"expression": null,
															"functionReturnParameters": 212,
															"id": 232,
															"nodeType": "Return",
															"src": "1472:7:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 239,
															"name": "_destination",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "1528:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 240,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "1542:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 236,
																	"name": "_reserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "1505:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 235,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "1498:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1498:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1865,
														"src": "1498:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1498:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "1498:52:1"
											}
										]
									},
									"documentation": null,
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "_destination",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 244,
												"src": "1214:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1214:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 244,
												"src": "1244:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 244,
												"src": "1262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1213:65:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:1"
									},
									"scope": 270,
									"src": "1188:369:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1657:142:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 253,
														"name": "_reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1670:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 254,
														"name": "ethAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "1682:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1670:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 260,
												"nodeType": "IfStatement",
												"src": "1667:74:1",
												"trueBody": {
													"id": 259,
													"nodeType": "Block",
													"src": "1694:47:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 256,
																	"name": "_target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "1715:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1715:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 252,
															"id": 258,
															"nodeType": "Return",
															"src": "1708:22:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 265,
															"name": "_target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1784:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 262,
																	"name": "_reserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1764:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 261,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "1757:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1757:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1770,
														"src": "1757:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1757:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 252,
												"id": 267,
												"nodeType": "Return",
												"src": "1750:42:1"
											}
										]
									},
									"documentation": null,
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 269,
												"src": "1591:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1591:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 269,
												"src": "1608:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1590:35:1"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 269,
												"src": "1648:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1647:9:1"
									},
									"scope": 270,
									"src": "1563:236:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 271,
							"src": "503:1298:1"
						}
					],
					"src": "30:1771:1"
				},
				"id": 1
			},
			"flashloan-implementation/IFlashLoanReceiver.sol": {
				"ast": {
					"absolutePath": "flashloan-implementation/IFlashLoanReceiver.sol",
					"exportedSymbols": {
						"IFlashLoanReceiverV1": [
							285
						]
					},
					"id": 286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 272,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 273,
								"nodeType": "StructuredDocumentation",
								"src": "55:210:2",
								"text": " @title IFlashLoanReceiver interface\n @notice Interface for the Aave fee IFlashLoanReceiver.\n @author Aave\n @dev implement this interface to develop a flashloan-compatible flashLoanReceiver contract*"
							},
							"fullyImplemented": false,
							"id": 285,
							"linearizedBaseContracts": [
								285
							],
							"name": "IFlashLoanReceiverV1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ee872558",
									"id": 284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeOperation",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "329:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "347:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "364:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "_params",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "378:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "378:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "328:73:2"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:0:2"
									},
									"scope": 285,
									"src": "303:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 286,
							"src": "266:147:2"
						}
					],
					"src": "30:383:2"
				},
				"id": 2
			},
			"flashloan-implementation/ILendingPool.sol": {
				"ast": {
					"absolutePath": "flashloan-implementation/ILendingPool.sol",
					"exportedSymbols": {
						"ILendingPoolV1": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 287,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "ILendingPoolV1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c72c4d10",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addressesProvider",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:3"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "138:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "136:11:3"
									},
									"scope": 477,
									"src": "84:64:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d2d0e066",
									"id": 301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 301,
												"src": "170:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 301,
												"src": "188:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "_referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 301,
												"src": "205:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 297,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "205:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "168:59:3"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:0:3"
									},
									"scope": 477,
									"src": "151:94:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "935642cf",
									"id": 310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeemUnderlying",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "276:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "294:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "309:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "274:52:3"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "335:0:3"
									},
									"scope": 477,
									"src": "248:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c858f5f9",
									"id": 321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 321,
												"src": "357:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 321,
												"src": "375:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "_interestRateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 321,
												"src": "392:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "392:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "_referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 321,
												"src": "419:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 317,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "419:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "355:86:3"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:0:3"
									},
									"scope": 477,
									"src": "339:112:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5ceae9c4",
									"id": 330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "471:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "489:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "_onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "506:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "469:58:3"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "544:0:3"
									},
									"scope": 477,
									"src": "454:91:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "48ca1300",
									"id": 335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 335,
												"src": "578:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "576:20:3"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:0:3"
									},
									"scope": 477,
									"src": "548:58:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "66f8cd93",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceFixedBorrowRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:35:3"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:0:3"
									},
									"scope": 477,
									"src": "609:79:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5a3b74b9",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "732:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "_useAsCollateral",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "750:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "750:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "730:43:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "782:0:3"
									},
									"scope": 477,
									"src": "691:92:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "00a718a9",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "_collateral",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "813:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "834:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "852:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "_purchaseAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "867:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "_receiveAToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "892:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "892:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "811:102:3"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:3"
									},
									"scope": 477,
									"src": "786:145:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5cffe9de",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "_receiver",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "955:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "974:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "992:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "_params",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "1009:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1009:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "953:80:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1042:0:3"
									},
									"scope": 477,
									"src": "934:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3e150141",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveConfigurationData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "1085:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1083:20:3"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "ltv",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "1128:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "liquidationThreshold",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "1141:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "liquidationDiscount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "1171:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "1200:35:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "usageAsCollateralEnabled",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "1237:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 385,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1237:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "borrowingEnabled",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "1268:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "fixedBorrowRateEnabled",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "1291:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1291:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "isActive",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "1320:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1320:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1126:209:3"
									},
									"scope": 477,
									"src": "1046:290:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "35ea6a75",
									"id": 425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1365:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1363:20:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "totalLiquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1408:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "availableLiquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1432:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "totalBorrowsFixed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1460:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "totalBorrowsVariable",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1487:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1517:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1517:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1540:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "fixedBorrowRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1568:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "averageFixedBorrowRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1593:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "utilizationRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1625:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1650:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1674:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1703:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "lastUpdateTimestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "1726:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 422,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "1726:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1406:348:3"
									},
									"scope": 477,
									"src": "1339:416:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "bf92857c",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "1788:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1786:17:3"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "totalLiquidityETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "1828:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1828:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "totalCollateralETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "1855:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "totalBorrowsETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "1883:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "availableBorrowsETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "1908:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "1937:35:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "ltv",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "1974:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1974:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "healthFactor",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "1987:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1826:183:3"
									},
									"scope": 477,
									"src": "1758:252:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "28dd2d01",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserReserveData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2043:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2061:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2041:35:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "currentATokenBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2101:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "currentUnderlyingBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2131:32:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2131:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "currentBorrowBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2165:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "principalBorrowBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2195:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "borrowRateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2227:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2227:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "borrowRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2251:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2271:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "originationFee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2294:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2294:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2318:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "lastUpdateTimestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2347:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "usageAsCollateralEnabled",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2376:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 470,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2099:308:3"
									},
									"scope": 477,
									"src": "2013:395:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0902f1ac",
									"id": 476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2432:2:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2448:0:3"
									},
									"scope": 477,
									"src": "2411:38:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 478,
							"src": "55:2396:3"
						}
					],
					"src": "30:2421:3"
				},
				"id": 3
			},
			"flashloan-implementation/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "flashloan-implementation/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProviderV1": [
							491
						]
					},
					"id": 492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "55:130:4",
								"text": "@title ILendingPoolAddressesProvider interface\n@notice provides the interface to fetch the LendingPoolCore address"
							},
							"fullyImplemented": false,
							"id": 491,
							"linearizedBaseContracts": [
								491
							],
							"name": "ILendingPoolAddressesProviderV1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ed6ff760",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCore",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:4"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "288:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "287:17:4"
									},
									"scope": 491,
									"src": "235:70:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0261bf8b",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "333:2:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 490,
												"src": "359:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "358:9:4"
									},
									"scope": 491,
									"src": "310:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 492,
							"src": "187:183:4"
						}
					],
					"src": "30:340:4"
				},
				"id": 4
			},
			"flashloan-implementation/Withdrawable.sol": {
				"ast": {
					"absolutePath": "flashloan-implementation/Withdrawable.sol",
					"exportedSymbols": {
						"Withdrawable": [
							583
						]
					},
					"id": 584,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 493,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol",
							"id": 494,
							"nodeType": "ImportDirective",
							"scope": 584,
							"sourceUnit": 1754,
							"src": "55:111:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol",
							"id": 495,
							"nodeType": "ImportDirective",
							"scope": 584,
							"sourceUnit": 2045,
							"src": "167:115:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol",
							"id": 496,
							"nodeType": "ImportDirective",
							"scope": 584,
							"sourceUnit": 896,
							"src": "283:108:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 498,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 895,
										"src": "562:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$895",
											"typeString": "contract Ownable"
										}
									},
									"id": 499,
									"nodeType": "InheritanceSpecifier",
									"src": "562:7:5"
								}
							],
							"contractDependencies": [
								895,
								2363
							],
							"contractKind": "contract",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "393:141:5",
								"text": "Ensures that any contract that inherits from this contract is able to\nwithdraw funds that are accidentally received or stuck."
							},
							"fullyImplemented": true,
							"id": 583,
							"linearizedBaseContracts": [
								583,
								895,
								2363
							],
							"name": "Withdrawable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 502,
									"libraryName": {
										"contractScope": null,
										"id": 500,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2044,
										"src": "582:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$2044",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "576:26:5",
									"typeName": {
										"contractScope": null,
										"id": 501,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1753,
										"src": "596:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1753",
											"typeString": "contract ERC20"
										}
									}
								},
								{
									"constant": true,
									"id": 508,
									"mutability": "constant",
									"name": "ETHER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 583,
									"src": "607:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 503,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "30",
												"id": 506,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "640:1:5",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 505,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "632:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 504,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "632:7:5",
												"typeDescriptions": {
													"typeIdentifier": null,
													"typeString": null
												}
											}
										},
										"id": 507,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "632:10:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 516,
									"name": "LogWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "676:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"indexed": true,
												"mutability": "mutable",
												"name": "_assetAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "707:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "746:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "666:97:5"
									},
									"src": "649:115:5"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "923:485:5",
										"statements": [
											{
												"assignments": [
													525
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "assetBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 581,
														"src": "933:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 524,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "933:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "933:17:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 527,
														"name": "_assetAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "964:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 528,
														"name": "ETHER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "981:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "964:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "1177:158:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 551,
																	"name": "assetBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "1191:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 558,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -28,
																					"src": "1245:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Withdrawable_$583",
																						"typeString": "contract Withdrawable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Withdrawable_$583",
																						"typeString": "contract Withdrawable"
																					}
																				],
																				"id": 557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1237:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 556,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1237:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1237:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 553,
																					"name": "_assetAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 519,
																					"src": "1212:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 552,
																				"name": "ERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1753,
																				"src": "1206:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC20_$1753_$",
																					"typeString": "type(contract ERC20)"
																				}
																			},
																			"id": 554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1206:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$1753",
																				"typeString": "contract ERC20"
																			}
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1353,
																		"src": "1206:30:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1206:45:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1191:60:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 562,
															"nodeType": "ExpressionStatement",
															"src": "1191:60:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 567,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "1299:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1299:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 569,
																		"name": "assetBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "1311:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 564,
																				"name": "_assetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 519,
																				"src": "1271:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 563,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1753,
																			"src": "1265:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$1753_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1265:20:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$1753",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1865,
																	"src": "1265:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1831_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1265:59:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "1265:59:5"
														}
													]
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "960:375:5",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "988:183:5",
													"statements": [
														{
															"assignments": [
																531
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 531,
																	"mutability": "mutable",
																	"name": "self",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 550,
																	"src": "1002:12:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 530,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1002:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 536,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 534,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "1025:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Withdrawable_$583",
																			"typeString": "contract Withdrawable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Withdrawable_$583",
																			"typeString": "contract Withdrawable"
																		}
																	],
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1017:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 532,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1017:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1017:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1002:28:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 537,
																	"name": "assetBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "1086:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 538,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "1101:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1101:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1086:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 541,
															"nodeType": "ExpressionStatement",
															"src": "1086:27:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 547,
																		"name": "assetBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "1147:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 542,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "1127:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1127:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1127:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1127:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "1127:33:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 575,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1361:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1361:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 577,
															"name": "_assetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "1373:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 578,
															"name": "assetBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "1388:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 574,
														"name": "LogWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "1349:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1349:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "EmitStatement",
												"src": "1344:57:5"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "770:90:5",
										"text": " @dev Withdraw asset.\n @param _assetAddress Asset to be withdrawn."
									},
									"functionSelector": "51cff8d9",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 522,
											"modifierName": {
												"argumentTypes": null,
												"id": 521,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 844,
												"src": "913:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "913:9:5"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "_assetAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 582,
												"src": "883:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "882:23:5"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:0:5"
									},
									"scope": 583,
									"src": "865:543:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 584,
							"src": "537:873:5"
						}
					],
					"src": "30:1380:5"
				},
				"id": 5
			},
			"flashloan-implementation/exchange/Exchange.sol": {
				"ast": {
					"absolutePath": "flashloan-implementation/exchange/Exchange.sol",
					"exportedSymbols": {
						"Exchange": [
							701
						]
					},
					"id": 702,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 585,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:6"
						},
						{
							"absolutePath": "flashloan-implementation/exchange/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 586,
							"nodeType": "ImportDirective",
							"scope": 702,
							"sourceUnit": 786,
							"src": "66:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 701,
							"linearizedBaseContracts": [
								701
							],
							"name": "Exchange",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "320:440:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 605,
																		"name": "ownerOfToken1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "395:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 608,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "418:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Exchange_$701",
																					"typeString": "contract Exchange"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Exchange_$701",
																					"typeString": "contract Exchange"
																				}
																			],
																			"id": 607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "410:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 606,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "410:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "410:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 602,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 588,
																				"src": "377:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 601,
																			"name": "IBasicERC20Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 785,
																			"src": "360:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IBasicERC20Token_$785_$",
																				"typeString": "type(contract IBasicERC20Token)"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "360:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBasicERC20Token_$785",
																			"typeString": "contract IBasicERC20Token"
																		}
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 739,
																	"src": "360:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "360:64:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 611,
																"name": "amountOfToken1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "428:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "360:82:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2031",
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "456:65:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb963c2896a2206169f545030cec46d24f6bea9389c472acb8e0f48da8322999",
																"typeString": "literal_string \"This contract is not approved to spend this amount from token 1\""
															},
															"value": "This contract is not approved to spend this amount from token 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb963c2896a2206169f545030cec46d24f6bea9389c472acb8e0f48da8322999",
																"typeString": "literal_string \"This contract is not approved to spend this amount from token 1\""
															}
														],
														"id": 600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "330:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "330:201:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "330:201:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 621,
																		"name": "ownerOfToken2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "606:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 624,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "629:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Exchange_$701",
																					"typeString": "contract Exchange"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Exchange_$701",
																					"typeString": "contract Exchange"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "621:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "621:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "621:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 618,
																				"name": "token2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "588:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 617,
																			"name": "IBasicERC20Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 785,
																			"src": "571:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IBasicERC20Token_$785_$",
																				"typeString": "type(contract IBasicERC20Token)"
																			}
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "571:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBasicERC20Token_$785",
																			"typeString": "contract IBasicERC20Token"
																		}
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 739,
																	"src": "571:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "571:64:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 627,
																"name": "amountOfToken2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "639:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "571:82:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5468697320636f6e7472616374206973206e6f7420617070726f76656420746f207370656e64207468697320616d6f756e742066726f6d20746f6b656e2032",
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "667:65:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03555d648df7e6b723014309a5935ca50a462f434066140d1d586da12a6bd4bc",
																"typeString": "literal_string \"This contract is not approved to spend this amount from token 2\""
															},
															"value": "This contract is not approved to spend this amount from token 2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03555d648df7e6b723014309a5935ca50a462f434066140d1d586da12a6bd4bc",
																"typeString": "literal_string \"This contract is not approved to spend this amount from token 2\""
															}
														],
														"id": 616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "541:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "541:201:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "541:201:6"
											},
											{
												"id": 632,
												"nodeType": "PlaceholderStatement",
												"src": "752:1:6"
											}
										]
									},
									"documentation": null,
									"id": 634,
									"name": "onlyApproved",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 634,
												"src": "151:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "token2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 634,
												"src": "175:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "ownerOfToken1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 634,
												"src": "199:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "ownerOfToken2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 634,
												"src": "230:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "amountOfToken1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 634,
												"src": "261:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "amountOfToken2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 634,
												"src": "290:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "290:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "141:174:6"
									},
									"src": "115:645:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "914:147:6",
										"statements": [
											{
												"assignments": [
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "sent",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 661,
														"src": "924:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 645,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "924:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 655,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 651,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "980:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 652,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "988:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 653,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "999:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 648,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "953:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 647,
																"name": "IBasicERC20Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "936:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBasicERC20Token_$785_$",
																	"typeString": "type(contract IBasicERC20Token)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "936:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBasicERC20Token_$785",
																"typeString": "contract IBasicERC20Token"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 768,
														"src": "936:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "924:82:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 657,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "1024:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1030:23:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1016:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1016:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "1016:38:6"
											}
										]
									},
									"documentation": null,
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "807:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "837:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "861:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "888:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "888:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "797:108:6"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:0:6"
									},
									"scope": 701,
									"src": "766:295:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "1429:169:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 686,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "1457:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 687,
															"name": "ownerOfToken1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "1465:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 688,
															"name": "ownerOfToken2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "1480:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 689,
															"name": "amountOfToken1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "1495:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 685,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1439:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1439:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "1439:71:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 693,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "1538:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 694,
															"name": "ownerOfToken2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "1546:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 695,
															"name": "ownerOfToken1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "1561:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 696,
															"name": "amountOfToken2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "1576:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 692,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1520:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1520:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "1520:71:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "a64e3dd7",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 677,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 664,
													"src": "1302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"argumentTypes": null,
													"id": 678,
													"name": "token2",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 666,
													"src": "1318:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"argumentTypes": null,
													"id": 679,
													"name": "ownerOfToken1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 668,
													"src": "1334:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"argumentTypes": null,
													"id": 680,
													"name": "ownerOfToken2",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 670,
													"src": "1357:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"argumentTypes": null,
													"id": 681,
													"name": "amountOfToken1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "1380:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"argumentTypes": null,
													"id": 682,
													"name": "amountOfToken2",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 674,
													"src": "1404:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 683,
											"modifierName": {
												"argumentTypes": null,
												"id": 676,
												"name": "onlyApproved",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 634,
												"src": "1275:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
													"typeString": "modifier (address,address,address,address,uint256,uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1275:149:6"
										}
									],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "1095:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "token2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "1119:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "ownerOfToken1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "1143:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "ownerOfToken2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "1174:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "amountOfToken1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "1205:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1205:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "amountOfToken2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "1234:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1234:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1085:174:6"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1429:0:6"
									},
									"scope": 701,
									"src": "1067:531:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 702,
							"src": "90:1510:6"
						}
					],
					"src": "32:1568:6"
				},
				"id": 6
			},
			"flashloan-implementation/exchange/IERC20.sol": {
				"ast": {
					"absolutePath": "flashloan-implementation/exchange/IERC20.sol",
					"exportedSymbols": {
						"IBasicERC20Token": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 703,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "IBasicERC20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06fdde03",
									"id": 708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "113:2:7"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 708,
												"src": "138:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 705,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "138:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "137:15:7"
									},
									"scope": 785,
									"src": "100:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "173:2:7"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "198:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 710,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "198:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "197:15:7"
									},
									"scope": 785,
									"src": "158:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:2:7"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 718,
												"src": "260:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 715,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "260:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "259:7:7"
									},
									"scope": 785,
									"src": "218:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:7"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 723,
												"src": "318:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "317:9:7"
									},
									"scope": 785,
									"src": "272:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 730,
												"src": "351:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "350:17:7"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 730,
												"src": "391:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "390:9:7"
									},
									"scope": 785,
									"src": "332:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "dd62ed3e",
									"id": 739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "424:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "439:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "423:32:7"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "479:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "478:9:7"
									},
									"scope": 785,
									"src": "405:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 748,
												"src": "512:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 748,
												"src": "531:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "511:35:7"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 748,
												"src": "565:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "565:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "564:6:7"
									},
									"scope": 785,
									"src": "494:77:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "095ea7b3",
									"id": 757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 757,
												"src": "593:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 757,
												"src": "610:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "592:33:7"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 757,
												"src": "644:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "644:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:6:7"
									},
									"scope": 785,
									"src": "576:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "677:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "693:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "712:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "676:51:7"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "746:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:6:7"
									},
									"scope": 785,
									"src": "655:97:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 776,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 776,
												"src": "774:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 776,
												"src": "796:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 776,
												"src": "816:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "773:57:7"
									},
									"src": "759:72:7"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 784,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 784,
												"src": "851:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 784,
												"src": "874:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 784,
												"src": "899:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "850:63:7"
									},
									"src": "836:78:7"
								}
							],
							"scope": 786,
							"src": "66:850:7"
						}
					],
					"src": "32:885:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							895
						]
					},
					"id": 896,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:8"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 788,
							"nodeType": "ImportDirective",
							"scope": 896,
							"sourceUnit": 2364,
							"src": "66:30:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 790,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2363,
										"src": "621:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$2363",
											"typeString": "contract Context"
										}
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "621:7:8"
								}
							],
							"contractDependencies": [
								2363
							],
							"contractKind": "contract",
							"documentation": {
								"id": 789,
								"nodeType": "StructuredDocumentation",
								"src": "97:494:8",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 895,
							"linearizedBaseContracts": [
								895,
								2363
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 793,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 895,
									"src": "635:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 792,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 799,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 799,
												"src": "691:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 799,
												"src": "722:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:57:8"
									},
									"src": "664:84:8"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "874:135:8",
										"statements": [
											{
												"assignments": [
													804
												],
												"declarations": [
													{
														"constant": false,
														"id": 804,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 820,
														"src": "884:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 803,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "884:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 805,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "904:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "884:32:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 808,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "926:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 809,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "935:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "926:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "926:18:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "988:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "980:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 813,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "980:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "980:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 817,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "992:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 812,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "959:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "EmitStatement",
												"src": "954:48:8"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "754:91:8",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 821,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:8"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:8"
									},
									"scope": 895,
									"src": "850:159:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "1140:30:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 827,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 793,
													"src": "1157:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 826,
												"id": 828,
												"nodeType": "Return",
												"src": "1150:13:8"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1015:65:8",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:2:8"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "1131:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1130:9:8"
									},
									"scope": 895,
									"src": "1085:85:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "1279:96:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 834,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "1297:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1297:7:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 836,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "1308:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1308:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1297:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:34:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1289:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "1289:68:8"
											},
											{
												"id": 842,
												"nodeType": "PlaceholderStatement",
												"src": "1367:1:8"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "1176:77:8",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 844,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:8"
									},
									"src": "1258:117:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "1771:91:8",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 851,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "1807:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1823:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1815:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 852,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1815:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1815:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 850,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "1786:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "EmitStatement",
												"src": "1781:45:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 858,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "1836:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1853:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1845:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 859,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1845:7:8",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1845:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1836:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "1836:19:8"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1381:331:8",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 848,
											"modifierName": {
												"argumentTypes": null,
												"id": 847,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 844,
												"src": "1761:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1761:9:8"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:2:8"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:8"
									},
									"scope": 895,
									"src": "1717:145:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "2081:170:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 875,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "2099:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2111:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 876,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2111:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2111:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2099:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:40:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 874,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2091:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "2091:73:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 885,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "2200:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 886,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "2208:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 884,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "2179:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "EmitStatement",
												"src": "2174:43:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 889,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "2227:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 890,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2236:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2227:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "2227:17:8"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1868:138:8",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 872,
											"modifierName": {
												"argumentTypes": null,
												"id": 871,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 844,
												"src": "2071:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2071:9:8"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 894,
												"src": "2038:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2037:18:8"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:8"
									},
									"scope": 895,
									"src": "2011:240:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 896,
							"src": "592:1661:8"
						}
					],
					"src": "33:2221:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1250
						]
					},
					"id": 1251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 897,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 898,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:9",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1250,
							"linearizedBaseContracts": [
								1250
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "865:98:9",
										"statements": [
											{
												"assignments": [
													911
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 928,
														"src": "875:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 912,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "887:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 913,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "891:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 916,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "906:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 917,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "910:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 923,
												"nodeType": "IfStatement",
												"src": "902:28:9",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 921,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 909,
													"id": 922,
													"nodeType": "Return",
													"src": "913:17:9"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 925,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "954:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 926,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 909,
												"id": 927,
												"nodeType": "Return",
												"src": "940:16:9"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:9",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 929,
												"src": "805:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 929,
												"src": "816:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:9"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 929,
												"src": "850:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 905,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 929,
												"src": "856:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:9"
									},
									"scope": 1250,
									"src": "789:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "1185:75:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 941,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "1199:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 942,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "1203:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 948,
												"nodeType": "IfStatement",
												"src": "1195:28:9",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 946,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 940,
													"id": 947,
													"nodeType": "Return",
													"src": "1206:17:9"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 950,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "1247:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 951,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "1251:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 953,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 940,
												"id": 954,
												"nodeType": "Return",
												"src": "1233:20:9"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:9",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 956,
												"src": "1125:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 956,
												"src": "1136:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:9"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 956,
												"src": "1170:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 936,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 956,
												"src": "1176:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:9"
									},
									"scope": 1250,
									"src": "1109:151:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "1484:359:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 968,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "1716:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 975,
												"nodeType": "IfStatement",
												"src": "1712:28:9",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 973,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 967,
													"id": 974,
													"nodeType": "Return",
													"src": "1724:16:9"
												}
											},
											{
												"assignments": [
													977
												],
												"declarations": [
													{
														"constant": false,
														"id": 977,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 996,
														"src": "1750:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 976,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 978,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "1762:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 979,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "1766:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 982,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "1781:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 983,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "1785:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 985,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "1790:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 991,
												"nodeType": "IfStatement",
												"src": "1777:33:9",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 989,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 967,
													"id": 990,
													"nodeType": "Return",
													"src": "1793:17:9"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 993,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "1834:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 994,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 967,
												"id": 995,
												"nodeType": "Return",
												"src": "1820:16:9"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:9",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "1424:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "1435:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:9"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "1469:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "1475:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:9"
									},
									"scope": 1250,
									"src": "1408:435:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "2068:76:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1009,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "2082:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "2078:29:9",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1014,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1008,
													"id": 1015,
													"nodeType": "Return",
													"src": "2090:17:9"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1018,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "2131:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1019,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "2135:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1021,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1008,
												"id": 1022,
												"nodeType": "Return",
												"src": "2117:20:9"
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:9",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1024,
												"src": "2008:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1024,
												"src": "2019:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:9"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1024,
												"src": "2053:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1004,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1024,
												"src": "2059:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:9"
									},
									"scope": 1250,
									"src": "1992:152:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "2379:76:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1036,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "2393:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1043,
												"nodeType": "IfStatement",
												"src": "2389:29:9",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1041,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1035,
													"id": 1042,
													"nodeType": "Return",
													"src": "2401:17:9"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1045,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "2442:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1046,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "2446:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1048,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1035,
												"id": 1049,
												"nodeType": "Return",
												"src": "2428:20:9"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1051,
												"src": "2319:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1051,
												"src": "2330:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:9"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1051,
												"src": "2364:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1031,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1051,
												"src": "2370:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:9"
									},
									"scope": 1250,
									"src": "2303:152:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "2757:108:9",
										"statements": [
											{
												"assignments": [
													1062
												],
												"declarations": [
													{
														"constant": false,
														"id": 1062,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1076,
														"src": "2767:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1061,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1063,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "2779:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1064,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "2783:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1068,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "2802:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1069,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2807:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1074,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1062,
													"src": "2857:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1060,
												"id": 1075,
												"nodeType": "Return",
												"src": "2850:8:9"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:9",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1077,
												"src": "2703:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1077,
												"src": "2714:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:9"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1077,
												"src": "2748:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:9"
									},
									"scope": 1250,
									"src": "2690:175:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "3203:88:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1088,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "3221:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1089,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "3226:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1094,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3279:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1095,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "3283:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1086,
												"id": 1097,
												"nodeType": "Return",
												"src": "3272:12:9"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:9",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1099,
												"src": "3149:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1099,
												"src": "3160:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:9"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1099,
												"src": "3194:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:9"
									},
									"scope": 1250,
									"src": "3136:155:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "3605:148:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1109,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "3619:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1114,
												"nodeType": "IfStatement",
												"src": "3615:20:9",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1108,
													"id": 1113,
													"nodeType": "Return",
													"src": "3627:8:9"
												}
											},
											{
												"assignments": [
													1116
												],
												"declarations": [
													{
														"constant": false,
														"id": 1116,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1132,
														"src": "3645:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1120,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1117,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "3657:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1118,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "3661:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1122,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "3680:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1123,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "3684:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1125,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "3689:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1130,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1116,
													"src": "3745:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1108,
												"id": 1131,
												"nodeType": "Return",
												"src": "3738:8:9"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:9",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1133,
												"src": "3551:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1133,
												"src": "3562:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:9"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1133,
												"src": "3596:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:9"
									},
									"scope": 1250,
									"src": "3538:215:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "4284:83:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "4302:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1150,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "4355:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1151,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "4359:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1142,
												"id": 1153,
												"nodeType": "Return",
												"src": "4348:12:9"
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:9",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "4230:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "4241:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:9"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "4275:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:9"
									},
									"scope": 1250,
									"src": "4217:150:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "4887:81:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "4905:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1172,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "4956:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1173,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "4960:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1175,
												"nodeType": "Return",
												"src": "4949:12:9"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1177,
												"src": "4833:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1177,
												"src": "4844:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:9"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1177,
												"src": "4878:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:9"
									},
									"scope": 1250,
									"src": "4820:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "5527:68:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1190,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "5545:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1191,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "5550:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1193,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "5553:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1196,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "5583:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1197,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "5587:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1199,
												"nodeType": "Return",
												"src": "5576:12:9"
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:9",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1201,
												"src": "5445:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1201,
												"src": "5456:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1201,
												"src": "5467:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:9"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1201,
												"src": "5518:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:9"
									},
									"scope": 1250,
									"src": "5432:163:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "6347:67:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1214,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "6365:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1217,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "6372:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1220,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "6402:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1221,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "6406:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1212,
												"id": 1223,
												"nodeType": "Return",
												"src": "6395:12:9"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:9",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1225,
												"src": "6265:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1225,
												"src": "6276:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1225,
												"src": "6287:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:9"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1225,
												"src": "6338:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:9"
									},
									"scope": 1250,
									"src": "6252:162:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "7155:67:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1238,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1230,
																"src": "7173:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1241,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "7180:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1244,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "7210:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1245,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "7214:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1247,
												"nodeType": "Return",
												"src": "7203:12:9"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1249,
												"src": "7073:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1249,
												"src": "7084:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1249,
												"src": "7095:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:9"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1249,
												"src": "7146:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:9"
									},
									"scope": 1250,
									"src": "7060:162:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1251,
							"src": "630:6594:9"
						}
					],
					"src": "33:7192:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1753
						]
					},
					"id": 1754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1252,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:10"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 1253,
							"nodeType": "ImportDirective",
							"scope": 1754,
							"sourceUnit": 2364,
							"src": "66:33:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1254,
							"nodeType": "ImportDirective",
							"scope": 1754,
							"sourceUnit": 1832,
							"src": "100:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 1255,
							"nodeType": "ImportDirective",
							"scope": 1754,
							"sourceUnit": 1251,
							"src": "123:33:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1257,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2363,
										"src": "1339:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$2363",
											"typeString": "contract Context"
										}
									},
									"id": 1258,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:10"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1259,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1831,
										"src": "1348:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1831",
											"typeString": "contract IERC20"
										}
									},
									"id": 1260,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:10"
								}
							],
							"contractDependencies": [
								1831,
								2363
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1256,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:10",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1753,
							"linearizedBaseContracts": [
								1753,
								1831,
								2363
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1263,
									"libraryName": {
										"contractScope": null,
										"id": 1261,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1250,
										"src": "1367:8:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1250",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1361:27:10",
									"typeName": {
										"id": 1262,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1380:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1267,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1753,
									"src": "1394:46:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1266,
										"keyType": {
											"id": 1264,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:28:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1265,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1414:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1273,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1753,
									"src": "1447:69:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1272,
										"keyType": {
											"id": 1268,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1456:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1447:49:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1271,
											"keyType": {
												"id": 1269,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1476:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1467:28:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1270,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1487:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1275,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1753,
									"src": "1523:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1274,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1523:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1277,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1753,
									"src": "1558:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1276,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1558:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1279,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1753,
									"src": "1584:22:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1278,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1281,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1753,
									"src": "1612:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1280,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1612:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "2022:81:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1289,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "2032:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1290,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "2040:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2032:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "2032:13:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1293,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "2055:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1294,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "2065:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2055:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "2055:17:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1297,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "2082:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:2:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2082:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "2082:14:10"
											}
										]
									},
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "1642:311:10",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1302,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1302,
												"src": "1971:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1971:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1302,
												"src": "1992:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1970:44:10"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:0:10"
									},
									"scope": 1753,
									"src": "1958:145:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "2228:29:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1308,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1277,
													"src": "2245:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1307,
												"id": 1309,
												"nodeType": "Return",
												"src": "2238:12:10"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "2109:54:10",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:10"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1311,
												"src": "2213:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1305,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2213:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2212:15:10"
									},
									"scope": 1753,
									"src": "2168:89:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "2432:31:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1317,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1279,
													"src": "2449:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1316,
												"id": 1318,
												"nodeType": "Return",
												"src": "2442:14:10"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "2263:102:10",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2385:2:10"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1320,
												"src": "2417:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1314,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2417:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:15:10"
									},
									"scope": 1753,
									"src": "2370:93:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "3142:33:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1326,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1281,
													"src": "3159:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1325,
												"id": 1327,
												"nodeType": "Return",
												"src": "3152:16:10"
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "2469:612:10",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3103:2:10"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "3135:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1323,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3135:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3134:7:10"
									},
									"scope": 1753,
									"src": "3086:89:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1762
									],
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "3305:36:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1336,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1275,
													"src": "3322:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1335,
												"id": 1337,
												"nodeType": "Return",
												"src": "3315:19:10"
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "3181:49:10",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1332,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3278:8:10"
									},
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:10"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1339,
												"src": "3296:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3295:9:10"
									},
									"scope": 1753,
									"src": "3235:106:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1770
									],
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "3482:42:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1348,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "3499:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1350,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1349,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "3509:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3499:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1347,
												"id": 1351,
												"nodeType": "Return",
												"src": "3492:25:10"
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "3347:47:10",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1344,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3455:8:10"
									},
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1353,
												"src": "3418:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3417:17:10"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1353,
												"src": "3473:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3472:9:10"
									},
									"scope": 1753,
									"src": "3399:125:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1780
									],
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "3819:80:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1365,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "3839:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3839:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1367,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "3853:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1368,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "3864:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1364,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "3829:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "3829:42:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3888:4:10",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1363,
												"id": 1372,
												"nodeType": "Return",
												"src": "3881:11:10"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "3530:192:10",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1360,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3795:8:10"
									},
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1374,
												"src": "3745:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1374,
												"src": "3764:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3744:35:10"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1374,
												"src": "3813:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3813:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3812:6:10"
									},
									"scope": 1753,
									"src": "3727:172:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1790
									],
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "4055:51:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1385,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "4072:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1387,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1386,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "4084:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4072:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1389,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1388,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "4091:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4072:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1384,
												"id": 1390,
												"nodeType": "Return",
												"src": "4065:34:10"
											}
										]
									},
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "3905:47:10",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1381,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4028:8:10"
									},
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1392,
												"src": "3976:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1392,
												"src": "3991:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3975:32:10"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1392,
												"src": "4046:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4045:9:10"
									},
									"scope": 1753,
									"src": "3957:149:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1800
									],
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "4333:77:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1404,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "4352:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1406,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "4366:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1407,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "4375:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1403,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "4343:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "4343:39:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4399:4:10",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1402,
												"id": 1411,
												"nodeType": "Return",
												"src": "4392:11:10"
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "4112:127:10",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1399,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4309:8:10"
									},
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1413,
												"src": "4261:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1413,
												"src": "4278:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4260:33:10"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1413,
												"src": "4327:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4327:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4326:6:10"
									},
									"scope": 1753,
									"src": "4244:166:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1812
									],
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "4989:205:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1427,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "5009:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1428,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "5017:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1429,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "5028:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1426,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "4999:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "4999:36:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1433,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "5054:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1434,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "5062:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5062:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1443,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1420,
																	"src": "5114:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5122:42:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1436,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1273,
																			"src": "5076:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1438,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1437,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1416,
																			"src": "5088:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5076:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1441,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1439,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2351,
																			"src": "5096:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5096:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5076:33:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1201,
																"src": "5076:37:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5076:89:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1432,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "5045:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5045:121:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "5045:121:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5183:4:10",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1425,
												"id": 1449,
												"nodeType": "Return",
												"src": "5176:11:10"
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "4416:456:10",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1422,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4965:8:10"
									},
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1451,
												"src": "4899:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1451,
												"src": "4915:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1451,
												"src": "4934:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:51:10"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1451,
												"src": "4983:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4983:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4982:6:10"
									},
									"scope": 1753,
									"src": "4877:317:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "5683:121:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1462,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "5702:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5702:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1464,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "5716:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1472,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "5764:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1465,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1273,
																			"src": "5725:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1468,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1466,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2351,
																				"src": "5737:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 1467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:12:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5725:25:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1470,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1469,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "5751:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5725:34:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1077,
																"src": "5725:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5725:50:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1461,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "5693:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5693:83:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "5693:83:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5793:4:10",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1460,
												"id": 1477,
												"nodeType": "Return",
												"src": "5786:11:10"
											}
										]
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "5200:384:10",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1479,
												"src": "5616:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1479,
												"src": "5633:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5633:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5615:37:10"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1479,
												"src": "5677:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5677:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5676:6:10"
									},
									"scope": 1753,
									"src": "5589:215:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "6390:167:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1490,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "6409:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6409:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1492,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "6423:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1500,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "6471:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6488:39:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1493,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1273,
																			"src": "6432:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1496,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1494,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2351,
																				"src": "6444:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 1495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6444:12:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6432:25:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1498,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1497,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1482,
																		"src": "6458:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6432:34:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1201,
																"src": "6432:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6432:96:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1489,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "6400:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6400:129:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "6400:129:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6546:4:10",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1488,
												"id": 1506,
												"nodeType": "Return",
												"src": "6539:11:10"
											}
										]
									},
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "5810:476:10",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1508,
												"src": "6318:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6318:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1508,
												"src": "6335:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6317:42:10"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1508,
												"src": "6384:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1486,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6384:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6383:6:10"
									},
									"scope": 1753,
									"src": "6291:266:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "7118:443:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1519,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "7136:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7154:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7146:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1520,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7146:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7146:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7136:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7158:39:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7128:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7128:70:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "7128:70:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1529,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "7216:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7237:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7229:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7229:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7229:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7216:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7241:37:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7208:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "7208:71:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1539,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "7311:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1540,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "7319:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1541,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "7330:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1538,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "7290:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "7290:47:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1544,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "7348:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1546,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1545,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "7358:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7348:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1551,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "7390:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7398:40:10",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1547,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "7368:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1549,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1548,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "7378:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7368:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1201,
															"src": "7368:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7368:71:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7348:91:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "7348:91:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1556,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "7449:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1558,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1557,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "7459:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7449:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1563,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "7497:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1559,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "7472:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1561,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1560,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "7482:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7472:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1077,
															"src": "7472:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7472:32:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7449:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "7449:55:10"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1568,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "7528:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1569,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "7536:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1570,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "7547:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1567,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "7519:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7519:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1572,
												"nodeType": "EmitStatement",
												"src": "7514:40:10"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "6563:463:10",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1574,
												"src": "7050:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1574,
												"src": "7066:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1574,
												"src": "7085:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7049:51:10"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7118:0:10"
									},
									"scope": 1753,
									"src": "7031:530:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "7897:305:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1583,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "7915:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7934:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7926:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1584,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7926:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7926:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7915:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7938:33:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7907:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "7907:65:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8004:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1593,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8004:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8004:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1597,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "8016:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1598,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "8025:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1592,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "7983:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7983:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "7983:49:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1601,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "8043:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1604,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "8075:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1602,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "8058:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1077,
															"src": "8058:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8058:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8043:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "8043:39:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1608,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "8092:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1610,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1609,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "8102:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8092:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1615,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "8136:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1611,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "8113:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1613,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1612,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "8123:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8113:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1077,
															"src": "8113:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8113:30:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "8092:51:10"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8175:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8167:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1620,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8167:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8167:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1624,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "8179:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1625,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "8188:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1619,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "8158:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "EmitStatement",
												"src": "8153:42:10"
											}
										]
									},
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "7567:260:10",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1629,
												"src": "7847:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1629,
												"src": "7864:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7864:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7846:33:10"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7897:0:10"
									},
									"scope": 1753,
									"src": "7832:370:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "8587:345:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1638,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "8605:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8624:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8616:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1639,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8616:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8616:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8605:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8628:35:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8597:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "8597:67:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1648,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "8696:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8713:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8705:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1649,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8705:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8705:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1653,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "8717:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1647,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "8675:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8675:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "8675:49:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1656,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "8735:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1658,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1657,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "8745:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8735:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1663,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "8779:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8787:36:10",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1659,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "8756:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1661,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1660,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1632,
																	"src": "8766:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8756:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1201,
															"src": "8756:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8756:68:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8735:89:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "8735:89:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1668,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "8834:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1671,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "8866:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1669,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "8849:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1099,
															"src": "8849:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8849:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8834:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "8834:39:10"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1676,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "8897:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8906:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1677,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8906:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8906:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1681,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "8918:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1675,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "8888:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8888:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1683,
												"nodeType": "EmitStatement",
												"src": "8883:42:10"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "8208:309:10",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1685,
												"src": "8537:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8537:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1685,
												"src": "8554:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8536:33:10"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8587:0:10"
									},
									"scope": 1753,
									"src": "8522:410:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "9438:257:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1696,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "9456:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9473:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9465:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1697,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9465:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9465:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9456:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9477:38:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9448:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "9448:68:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1706,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "9534:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9553:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9545:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1707,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9545:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9545:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9534:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9557:36:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1705,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9526:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9526:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "9526:68:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1715,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "9605:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1718,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1716,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "9617:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9605:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1719,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1717,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "9624:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9605:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1720,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "9635:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9605:36:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "9605:36:10"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1724,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "9665:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1725,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "9672:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1726,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "9681:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1723,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "9656:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1728,
												"nodeType": "EmitStatement",
												"src": "9651:37:10"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "8938:412:10",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1730,
												"src": "9373:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9373:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1730,
												"src": "9388:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9388:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1730,
												"src": "9405:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9405:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9372:48:10"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9438:0:10"
									},
									"scope": 1753,
									"src": "9355:340:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "10076:38:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1736,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "10086:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1737,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "10098:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10086:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1739,
												"nodeType": "ExpressionStatement",
												"src": "10086:21:10"
											}
										]
									},
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "9701:312:10",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1741,
												"src": "10042:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1732,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10042:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10041:17:10"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10076:0:10"
									},
									"scope": 1753,
									"src": "10018:96:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "10790:3:10",
										"statements": []
									},
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "10120:576:10",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1752,
												"src": "10731:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10731:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1752,
												"src": "10745:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10745:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1752,
												"src": "10757:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10757:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10730:42:10"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10790:0:10"
									},
									"scope": 1753,
									"src": "10701:92:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1754,
							"src": "1321:9474:10"
						}
					],
					"src": "33:10763:10"
				},
				"id": 10
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1831
						]
					},
					"id": 1832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1755,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1756,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:11",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1831,
							"linearizedBaseContracts": [
								1831
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:11",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:11"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1762,
												"src": "277:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:11"
									},
									"scope": 1831,
									"src": "231:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:11",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1770,
												"src": "388:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:11"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1770,
												"src": "428:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:11"
									},
									"scope": 1831,
									"src": "369:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:11",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1780,
												"src": "675:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1780,
												"src": "694:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:11"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1780,
												"src": "728:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:11"
									},
									"scope": 1831,
									"src": "657:77:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:11",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1790,
												"src": "1028:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1790,
												"src": "1043:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:11"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1790,
												"src": "1083:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:11"
									},
									"scope": 1831,
									"src": "1009:83:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:11",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1800,
												"src": "1762:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1800,
												"src": "1779:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:11"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1800,
												"src": "1813:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:11"
									},
									"scope": 1831,
									"src": "1745:74:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:11",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1812,
												"src": "2148:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1812,
												"src": "2164:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1812,
												"src": "2183:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:11"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1812,
												"src": "2217:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:11"
									},
									"scope": 1831,
									"src": "2126:97:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:11",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1821,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1821,
												"src": "2407:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1821,
												"src": "2429:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1821,
												"src": "2449:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:11"
									},
									"src": "2392:72:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1822,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:11",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1830,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1830,
												"src": "2638:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1830,
												"src": "2661:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1830,
												"src": "2686:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:11"
									},
									"src": "2623:78:11"
								}
							],
							"scope": 1832,
							"src": "137:2566:11"
						}
					],
					"src": "33:2671:11"
				},
				"id": 11
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							2044
						]
					},
					"id": 2045,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1833,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:12"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1834,
							"nodeType": "ImportDirective",
							"scope": 2045,
							"sourceUnit": 1832,
							"src": "66:22:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 1835,
							"nodeType": "ImportDirective",
							"scope": 2045,
							"sourceUnit": 1251,
							"src": "89:33:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1836,
							"nodeType": "ImportDirective",
							"scope": 2045,
							"sourceUnit": 2341,
							"src": "123:33:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1837,
								"nodeType": "StructuredDocumentation",
								"src": "158:457:12",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2044,
							"linearizedBaseContracts": [
								2044
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1840,
									"libraryName": {
										"contractScope": null,
										"id": 1838,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1250,
										"src": "646:8:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1250",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "640:27:12",
									"typeName": {
										"id": 1839,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1843,
									"libraryName": {
										"contractScope": null,
										"id": 1841,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2340,
										"src": "678:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$2340",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "672:26:12",
									"typeName": {
										"id": 1842,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "776:103:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1853,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "806:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1856,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "836:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1780,
																		"src": "836:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "836:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1859,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "861:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1860,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "865:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1854,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "813:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "813:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:58:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1852,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "786:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "786:86:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "786:86:12"
											}
										]
									},
									"documentation": null,
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1865,
												"src": "726:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1844,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1831,
													"src": "726:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1831",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1865,
												"src": "740:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1865,
												"src": "752:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "725:41:12"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:12"
									},
									"scope": 2044,
									"src": "704:175:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "975:113:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1877,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "1005:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1880,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1867,
																			"src": "1035:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1812,
																		"src": "1035:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1035:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1883,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "1064:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1884,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1871,
																	"src": "1070:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1885,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1873,
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1878,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1012:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1012:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1012:68:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1876,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "985:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:96:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1888,
												"nodeType": "ExpressionStatement",
												"src": "985:96:12"
											}
										]
									},
									"documentation": null,
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1890,
												"src": "911:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1866,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1831,
													"src": "911:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1831",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1890,
												"src": "925:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1890,
												"src": "939:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1890,
												"src": "951:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:55:12"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:12"
									},
									"scope": 2044,
									"src": "885:203:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "1424:537:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1901,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1897,
																			"src": "1713:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1722:1:12",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1713:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1904,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1712:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1909,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1753:4:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2044",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2044",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1908,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1745:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1907,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1745:7:12",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1910,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1745:13:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1911,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1895,
																					"src": "1760:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1905,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1893,
																					"src": "1729:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1831",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1790,
																				"src": "1729:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1729:39:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1772:1:12",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1729:44:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1915,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1728:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1712:62:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:56:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1704:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:150:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "1704:150:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1921,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "1884:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1924,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1893,
																			"src": "1914:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1800,
																		"src": "1914:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1914:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1927,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "1938:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1928,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "1947:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1922,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1891:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1891:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1891:62:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1920,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "1864:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:90:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1931,
												"nodeType": "ExpressionStatement",
												"src": "1864:90:12"
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "1094:249:12",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1933,
												"src": "1369:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1892,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1831,
													"src": "1369:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1831",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1933,
												"src": "1383:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1933,
												"src": "1400:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1368:46:12"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1424:0:12"
									},
									"scope": 2044,
									"src": "1348:613:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "2053:197:12",
										"statements": [
											{
												"assignments": [
													1943
												],
												"declarations": [
													{
														"constant": false,
														"id": 1943,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1968,
														"src": "2063:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1942,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2063:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1955,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1953,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "2130:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1948,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2110:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2044",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2044",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2102:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1946,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2102:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2102:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1950,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1937,
																	"src": "2117:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1944,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "2086:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1831",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1790,
																"src": "2086:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2086:39:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1077,
														"src": "2086:43:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2063:73:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1957,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "2166:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1960,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "2196:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1800,
																		"src": "2196:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2196:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1963,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1937,
																	"src": "2220:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1964,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "2229:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1958,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2173:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2173:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2173:69:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1956,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "2146:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:97:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "2146:97:12"
											}
										]
									},
									"documentation": null,
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1969,
												"src": "1998:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1934,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1831,
													"src": "1998:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1831",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1969,
												"src": "2012:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1969,
												"src": "2029:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1997:46:12"
									},
									"returnParameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:12"
									},
									"scope": 2044,
									"src": "1967:283:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "2342:242:12",
										"statements": [
											{
												"assignments": [
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2005,
														"src": "2352:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1978,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2352:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1992,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1989,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "2419:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:43:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1984,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2399:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2044",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2044",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2391:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1982,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2391:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1986,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "2406:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1980,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1971,
																	"src": "2375:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1831",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1790,
																"src": "2375:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:39:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1201,
														"src": "2375:43:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:95:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2352:118:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1994,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "2500:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1997,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1971,
																			"src": "2530:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1800,
																		"src": "2530:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2530:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2000,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "2554:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2001,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "2563:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1995,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2507:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2507:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2507:69:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1993,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "2480:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:97:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "2480:97:12"
											}
										]
									},
									"documentation": null,
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2006,
												"src": "2287:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1970,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1831,
													"src": "2287:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1831",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2006,
												"src": "2301:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2006,
												"src": "2318:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2286:46:12"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2342:0:12"
									},
									"scope": 2044,
									"src": "2256:328:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2042,
										"nodeType": "Block",
										"src": "3037:681:12",
										"statements": [
											{
												"assignments": [
													2015
												],
												"declarations": [
													{
														"constant": false,
														"id": 2015,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2042,
														"src": "3386:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2014,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3386:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2024,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2021,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "3440:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:34:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2018,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2009,
																	"src": "3420:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1831",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1831",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3412:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2016,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3412:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3412:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2135,
														"src": "3412:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:95:12"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2025,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "3495:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3495:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3515:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3495:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2041,
												"nodeType": "IfStatement",
												"src": "3491:221:12",
												"trueBody": {
													"id": 2040,
													"nodeType": "Block",
													"src": "3518:194:12",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2032,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2015,
																				"src": "3635:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 2034,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3648:4:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2033,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3648:4:12",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 2035,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3647:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2030,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3624:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3624:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3624:30:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3656:44:12",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 2029,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3616:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3616:85:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2039,
															"nodeType": "ExpressionStatement",
															"src": "3616:85:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "2590:372:12",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2043,
												"src": "2996:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2008,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1831,
													"src": "2996:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1831",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2043,
												"src": "3010:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2010,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3010:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2995:33:12"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3037:0:12"
									},
									"scope": 2044,
									"src": "2967:751:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2045,
							"src": "616:3104:12"
						}
					],
					"src": "33:3688:12"
				},
				"id": 12
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2340
						]
					},
					"id": 2341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2046,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2047,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:13",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2340,
							"linearizedBaseContracts": [
								2340
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "792:347:13",
										"statements": [
											{
												"assignments": [
													2056
												],
												"declarations": [
													{
														"constant": false,
														"id": 2056,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2063,
														"src": "989:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2055,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2057,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:13"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:13"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:13"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2050,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:13",
														"valueSize": 1
													},
													{
														"declaration": 2056,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:13",
														"valueSize": 1
													}
												],
												"id": 2058,
												"nodeType": "InlineAssembly",
												"src": "1067:41:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2059,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "1124:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:13",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2054,
												"id": 2062,
												"nodeType": "Return",
												"src": "1117:15:13"
											}
										]
									},
									"documentation": {
										"id": 2048,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:13",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2064,
												"src": "746:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:17:13"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2064,
												"src": "786:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:6:13"
									},
									"scope": 2340,
									"src": "726:413:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "2127:320:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2075,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2340",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2340",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2073,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2078,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "2170:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:13"
											},
											{
												"assignments": [
													2084,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2084,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2097,
														"src": "2299:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2083,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 2091,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2085,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "2317:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2317:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 2087,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "2340:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2093,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "2370:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:13"
											}
										]
									},
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:13",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2098,
												"src": "2075:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2098,
												"src": "2102:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:43:13"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:13"
									},
									"scope": 2340,
									"src": "2056:391:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "3277:82:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2109,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2101,
															"src": "3305:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2110,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "3313:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2108,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2115,
															2135
														],
														"referencedDeclaration": 2135,
														"src": "3292:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2107,
												"id": 2113,
												"nodeType": "Return",
												"src": "3285:67:13"
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:13",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2115,
												"src": "3210:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2115,
												"src": "3226:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2102,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:35:13"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2115,
												"src": "3263:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2105,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:14:13"
									},
									"scope": 2340,
									"src": "3188:171:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2134,
										"nodeType": "Block",
										"src": "3698:76:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2128,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "3737:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2129,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "3745:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 2131,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "3754:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2127,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2155,
															2205
														],
														"referencedDeclaration": 2205,
														"src": "3715:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2126,
												"id": 2133,
												"nodeType": "Return",
												"src": "3708:59:13"
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2135,
												"src": "3603:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2135,
												"src": "3619:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2135,
												"src": "3638:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2121,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:63:13"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2135,
												"src": "3684:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2124,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3683:14:13"
									},
									"scope": 2340,
									"src": "3581:193:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2154,
										"nodeType": "Block",
										"src": "4249:111:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2148,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "4288:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2149,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "4296:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2150,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "4302:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2147,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2155,
															2205
														],
														"referencedDeclaration": 2205,
														"src": "4266:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2146,
												"id": 2153,
												"nodeType": "Return",
												"src": "4259:94:13"
											}
										]
									},
									"documentation": {
										"id": 2136,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2155,
												"src": "4167:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2155,
												"src": "4183:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2155,
												"src": "4202:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:50:13"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2155,
												"src": "4235:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4234:14:13"
									},
									"scope": 2340,
									"src": "4136:224:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "4749:382:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2172,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2340",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2340",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2170,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4767:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2175,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2162,
																"src": "4792:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2179,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2182,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "4869:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2181,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2064,
																"src": "4858:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2186,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:13"
											},
											{
												"assignments": [
													2188,
													2190
												],
												"declarations": [
													{
														"constant": false,
														"id": 2188,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2204,
														"src": "4981:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2187,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2190,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2204,
														"src": "4995:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2189,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2197,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2195,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "5050:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2191,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2158,
																"src": "5022:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5022:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 2193,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2162,
																"src": "5042:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2199,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2188,
															"src": "5090:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2200,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "5099:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2201,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "5111:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2198,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "5072:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2168,
												"id": 2203,
												"nodeType": "Return",
												"src": "5065:59:13"
											}
										]
									},
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:13",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2205,
												"src": "4639:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2205,
												"src": "4655:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2159,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2205,
												"src": "4674:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2205,
												"src": "4689:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4638:78:13"
									},
									"returnParameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2205,
												"src": "4735:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4734:14:13"
									},
									"scope": 2340,
									"src": "4608:523:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2221,
										"nodeType": "Block",
										"src": "5408:97:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2216,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "5444:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2217,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "5452:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2215,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2222,
															2257
														],
														"referencedDeclaration": 2257,
														"src": "5425:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2214,
												"id": 2220,
												"nodeType": "Return",
												"src": "5418:80:13"
											}
										]
									},
									"documentation": {
										"id": 2206,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2222,
												"src": "5336:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2222,
												"src": "5352:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:35:13"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2222,
												"src": "5394:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:14:13"
									},
									"scope": 2340,
									"src": "5308:197:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "5817:288:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2236,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2225,
																	"src": "5846:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2235,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2064,
																"src": "5835:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 2234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2240,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:13"
											},
											{
												"assignments": [
													2242,
													2244
												],
												"declarations": [
													{
														"constant": false,
														"id": 2242,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2256,
														"src": "5965:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2241,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2244,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2256,
														"src": "5979:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2243,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2249,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2247,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "6024:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "6006:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6006:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2251,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "6064:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2252,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "6073:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2253,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "6085:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2250,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "6046:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2233,
												"id": 2255,
												"nodeType": "Return",
												"src": "6039:59:13"
											}
										]
									},
									"documentation": {
										"id": 2223,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2257,
												"src": "5717:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2257,
												"src": "5733:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2257,
												"src": "5752:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2228,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5716:63:13"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2257,
												"src": "5803:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:14:13"
									},
									"scope": 2340,
									"src": "5689:416:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "6381:101:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2268,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2260,
															"src": "6419:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2269,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "6427:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2267,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2274,
															2309
														],
														"referencedDeclaration": 2309,
														"src": "6398:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2266,
												"id": 2272,
												"nodeType": "Return",
												"src": "6391:84:13"
											}
										]
									},
									"documentation": {
										"id": 2258,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2274,
												"src": "6314:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2274,
												"src": "6330:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6313:35:13"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2274,
												"src": "6367:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6366:14:13"
									},
									"scope": 2340,
									"src": "6284:198:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "6793:292:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2288,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "6822:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2287,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2064,
																"src": "6811:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2292,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:13"
											},
											{
												"assignments": [
													2294,
													2296
												],
												"declarations": [
													{
														"constant": false,
														"id": 2294,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2308,
														"src": "6943:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2293,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2296,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2308,
														"src": "6957:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2295,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2301,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2299,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "7004:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2297,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "6984:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6984:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2303,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "7044:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2296,
															"src": "7053:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2305,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "7065:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2302,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "7026:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2285,
												"id": 2307,
												"nodeType": "Return",
												"src": "7019:59:13"
											}
										]
									},
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2309,
												"src": "6698:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2309,
												"src": "6714:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2278,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2309,
												"src": "6733:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6697:63:13"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2309,
												"src": "6779:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2283,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:14:13"
									},
									"scope": 2340,
									"src": "6668:417:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2338,
										"nodeType": "Block",
										"src": "7220:596:13",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 2320,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2311,
													"src": "7234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2336,
													"nodeType": "Block",
													"src": "7291:519:13",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2324,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2313,
																		"src": "7375:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7375:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:13",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2334,
																"nodeType": "Block",
																"src": "7747:53:13",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2331,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2315,
																					"src": "7772:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2330,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2333,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:13"
																	}
																]
															},
															"id": 2335,
															"nodeType": "IfStatement",
															"src": "7371:429:13",
															"trueBody": {
																"id": 2329,
																"nodeType": "Block",
																"src": "7398:343:13",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:13",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:13"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:13"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:13",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:13",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:13"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:13"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:13"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:13"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 2313,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:13",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2313,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:13",
																				"valueSize": 1
																			}
																		],
																		"id": 2328,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:13"
																	}
																]
															}
														}
													]
												},
												"id": 2337,
												"nodeType": "IfStatement",
												"src": "7230:580:13",
												"trueBody": {
													"id": 2323,
													"nodeType": "Block",
													"src": "7243:42:13",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2321,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2313,
																"src": "7264:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2319,
															"id": 2322,
															"nodeType": "Return",
															"src": "7257:17:13"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2339,
												"src": "7118:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2339,
												"src": "7132:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2339,
												"src": "7157:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2314,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7117:67:13"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2339,
												"src": "7206:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7205:14:13"
									},
									"scope": 2340,
									"src": "7091:725:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2341,
							"src": "134:7684:13"
						}
					],
					"src": "33:7786:13"
				},
				"id": 13
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/docs-v3.x/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2363
						]
					},
					"id": 2364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2342,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:14"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2363,
							"linearizedBaseContracts": [
								2363
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "668:34:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 2347,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 2346,
												"id": 2349,
												"nodeType": "Return",
												"src": "678:17:14"
											}
										]
									},
									"documentation": null,
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:14"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2351,
												"src": "651:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:14"
									},
									"scope": 2363,
									"src": "598:104:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "773:165:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2356,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$2363",
														"typeString": "contract Context"
													}
												},
												"id": 2357,
												"nodeType": "ExpressionStatement",
												"src": "783:4:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 2358,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2355,
												"id": 2360,
												"nodeType": "Return",
												"src": "916:15:14"
											}
										]
									},
									"documentation": null,
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:14"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2362,
												"src": "759:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:14"
									},
									"scope": 2363,
									"src": "708:230:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2364,
							"src": "566:374:14"
						}
					],
					"src": "33:908:14"
				},
				"id": 14
			}
		}
	}
}